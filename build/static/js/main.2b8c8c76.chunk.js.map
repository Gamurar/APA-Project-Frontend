{"version":3,"sources":["components/Views/Card/index.tsx","theme/index.tsx","assets/svg/switch.svg","components/Controllers/BuyCard/BuyInputs.tsx","components/Controllers/BuyCard/index.tsx","pages/Home/Home.tsx","pages/About/About.tsx","services/auth-header.js","services/auth.service.js","app/authSlice.ts","helpers/history.js","components/Views/Button/Button.tsx","pages/Login/Login.tsx","pages/Register/Register.tsx","components/Controllers/ChangePassword/ChangePassword.tsx","pages/Profile/Profile.tsx","components/Controllers/PrivateRoute/PrivateRoute.tsx","components/Views/Header/Header.tsx","constants/roles.js","pages/Admin/Admin.tsx","pages/Reset/Reset.tsx","pages/ForgotPassword/ForgotPassword.tsx","App.tsx","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["Card","styled","div","MEDIA_WIDTHS","upToExtraSmall","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","Object","keys","reduce","accumulator","size","a","b","c","css","theme","white","black","accentColor","primary65","grids","sm","md","lg","shadow1","mediaWidth","flexColumnNoWrap","flexRowNoWrap","ThemeProvider","children","_circle","_path","TextWrapper","span","color","fontSize","fontWeight","lineHeight","TYPE","props","_excluded","createGlobalStyle","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSwitch","_ref","svgRef","title","titleId","width","height","viewBox","fill","xmlns","ref","id","cx","cy","r","fillRule","clipRule","d","ForwardRef","InputsContainer","AmountInputLabel","AmountInput","input","SwitchIconWrapper","BuyInputs","disabled","SwapCard","MainContainer","Home","BuyCard","About","authHeader","accessToken","localStorage","getItem","Authorization","API_AUTH_URL","authService","register","email","password","axios","post","login","then","response","data","setItem","me","get","headers","JSON","stringify","logout","removeItem","delete","changePassword","newPassword","resetPassword","user","parse","initialState","isLoggedIn","Boolean","message","authSlice","createSlice","name","reducers","registerSuccess","state","registerFail","loginSuccess","action","payload","loginFail","setUser","actions","history","createBrowserHistory","BaseButton","button","Button","Login","useState","setEmail","setPassword","loading","setLoading","useSelector","auth","dispatch","useDispatch","className","to","onSubmit","e","preventDefault","AuthService","push","window","location","reload","catch","error","type","value","placeholder","onChange","style","Register","userEmail","setUserEmail","console","log","Schema","Yup","shape","required","passwordConfirmation","when","is","val","oneOf","ChangePassword","initialValues","validationSchema","toast","success","finally","isValid","values","errors","handleSubmit","handleChange","handleBlur","onBlur","position","autoClose","DeleteMyAccountButton","Profile","deleteAccountButtonText","setDeleteAccountButtonText","deleteAccountConfirmed","setDeleteAccountConfirmed","role","onClick","PrivateRoute","Component","component","roles","rest","render","pathname","from","Header","Roles","Admin","Reset","query","URLSearchParams","useLocation","search","useHistory","otc","onClose","ForgotPassword","formikApi","resetForm","App","exact","path","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","authReducer","counter","counterReducer","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b8c8c76.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Card = styled.div`\n  width: 483px;\n  height: 392px;\n  box-shadow: 0px 1px 23px rgba(31, 35, 36, 0.04), 0px 12px 44px rgba(47, 61, 65, 0.16);\n  border-radius: 4px;\n  color: black;\n  text-align: left;\n  padding: 31px;\n`;\n\nexport default Card;\n","import React, { useMemo } from 'react'\nimport styled, {\n  createGlobalStyle,\n  css,\n  DefaultTheme,\n  ThemeProvider as StyledComponentsThemeProvider,\n} from 'styled-components'\nimport { Colors } from './styled'\n\nexport const MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 720,\n  upToMedium: 960,\n  upToLarge: 1280,\n}\n\nconst mediaWidthTemplates: { [width in keyof typeof MEDIA_WIDTHS]: typeof css } = Object.keys(MEDIA_WIDTHS).reduce(\n  (accumulator, size) => {\n    ;(accumulator as any)[size] = (a: any, b: any, c: any) => css`\n      @media (max-width: ${(MEDIA_WIDTHS as any)[size]}px) {\n        ${css(a, b, c)}\n      }\n    `\n    return accumulator\n  },\n  {}\n) as any\n\nexport function colors(): Colors {\n  return {\n    white: '#FFFFFF',\n    black: '#292F30',\n    accentColor: '#1E2223',\n    primary65: '#595959',\n  }\n}\n\nexport function theme(): DefaultTheme {\n  return {\n    ...colors(),\n\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24,\n    },\n\n    //shadows\n    shadow1:  '#2F80ED',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `,\n  }\n}\n\nexport default function ThemeProvider({ children }: { children: React.ReactNode }) {\n  return <StyledComponentsThemeProvider theme={theme}>{children}</StyledComponentsThemeProvider>\n}\n\nconst TextWrapper = styled.span<{ color: keyof Colors; fontWeight: number; fontSize: number; lineHeight: number }>`\n  color: ${({ color, theme }) => (theme as any)[color]};\n  font-size: ${({fontSize}) => fontSize && `${fontSize}px`};\n  font-weight: ${({fontWeight}) => fontWeight && `${fontWeight}`};\n  line-height: ${({lineHeight}) => lineHeight && `${lineHeight}px`};\n`\n\nexport const TYPE = {\n  H2(props: any) {\n    return <TextWrapper fontWeight={700} fontSize={18} lineHeight={21} color={'black'} {...props} />\n  },\n  caption(props: any) {\n    return <TextWrapper fontWeight={400} fontSize={14} lineHeight={16} color={'primary65'} {...props} />\n  },\n}\n\nexport const ThemedGlobalStyle = createGlobalStyle`\nhtml {\n  color: ${({ theme }) => theme.black};\n  background-color: ${({ theme }) => theme.white} !important;\n}\n`\n","var _circle, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSwitch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 31,\n    viewBox: \"0 0 32 31\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 16,\n    cy: 15.4835,\n    r: 15.4835,\n    fill: \"#F5F5F5\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M14.5165 10L14.5165 18.6762L10.6316 14.7912C10.2501 14.4098 9.64106 14.4188 9.27112 14.8113C8.90118 15.2039 8.91048 15.8313 9.29189 16.2127L14.8127 21.7335C14.9677 21.8885 15.1603 21.9791 15.3592 22.0055C15.6715 22.0789 16.0125 21.9929 16.2595 21.7458L21.757 16.2484C22.1449 15.8605 22.1543 15.2225 21.7781 14.8233C21.402 14.4242 20.7826 14.415 20.3947 14.8028L16.5165 18.681L16.5165 10C16.5165 9.44772 16.0688 9 15.5165 9C14.9642 9 14.5165 9.44772 14.5165 10Z\",\n    fill: \"#747474\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSwitch);\nexport default __webpack_public_path__ + \"static/media/switch.d79e3193.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { TYPE } from 'theme';\nimport styled from 'styled-components';\nimport { ReactComponent as SwitchIcon } from 'assets/svg/switch.svg';\n\nconst BuyInputs = (props: any) => {\n  return (\n    <InputsContainer>\n      <div>\n        <AmountInputLabel>Send</AmountInputLabel>\n        <AmountInput />\n      </div>\n      <SwitchIconWrapper>\n        <SwitchIcon />\n      </SwitchIconWrapper>\n      <div>\n        <AmountInputLabel>Receive</AmountInputLabel>\n        <AmountInput disabled />\n      </div>\n    </InputsContainer>\n  );\n};\n\nconst InputsContainer = styled.div`\n  margin: 14px 0;\n`;\n\nconst AmountInputLabel = styled(TYPE.caption)`\n  padding-left: 8px;\n  padding-bottom: 4px;\n  display: block;\n`;\n\nconst AmountInput = styled.input`\n  height: 72px;\n  width: -webkit-fill-available;\n  border: 1px solid #e6e6e6;\n  box-sizing: border-box;\n  border-radius: 12px;\n`;\n\nconst SwitchIconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 8px;\n  margin-bottom: -8px;\n`\n\nexport default BuyInputs;\n","import React from 'react';\nimport Card from 'components/Views/Card';\nimport { TYPE } from 'theme';\nimport BuyInputs from './BuyInputs'\n\nconst SwapCard = (props: any) => {\n  return (\n    <Card>\n      <TYPE.H2>Buy Master Token</TYPE.H2>\n      <BuyInputs />\n    </Card>\n  );\n};\n\nexport default SwapCard;\n","import React from 'react';\nimport logo from '../../logo.svg';\nimport { Counter } from '../../features/counter/Counter';\nimport './Home.css';\nimport BuyCard from 'components/Controllers/BuyCard';\nimport styled from 'styled-components';\n\nconst Home = () => {\n  return (\n    <MainContainer>\n        <BuyCard />\n    </MainContainer>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nexport default Home;\n","import React from 'react';\n\nconst About = () => {\n    return (\n        <div>\n            About\n        </div>\n    );\n};\n\nexport default About;\n","export default function authHeader() {\n    const accessToken = localStorage.getItem('accessToken');\n\n    if (accessToken) {\n        return { Authorization: 'Bearer ' + accessToken };\n    } else {\n        return {};\n    }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_AUTH_URL = 'http://localhost:8000/v1/auth';\n\nconst register = ({ email, password }) => {\n  return axios.post(API_AUTH_URL + '/register', {\n    email,\n    password,\n  });\n};\n\nconst login = (email, password) => {\n  return axios\n    .post(API_AUTH_URL + '/login', {\n      email,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem('accessToken', response.data.accessToken);\n      }\n\n      return response.data;\n    });\n};\n\nconst me = () => {\n  return axios\n    .get(API_AUTH_URL + '/me', {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      if (response.data) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('accessToken');\n};\n\nconst _delete = () => {\n  return axios.delete(API_AUTH_URL + '/me', {\n    headers: authHeader(),\n  });\n};\n\nconst changePassword = (newPassword) => {\n  return axios.post(\n    API_AUTH_URL + '/password',\n    { password: newPassword },\n    {\n      headers: authHeader(),\n    },\n  );\n};\n\nconst resetPassword = (data) => {\n  return axios.post(\n      API_AUTH_URL + '/password/reset',\n      data,\n  );\n};\n\nconst authService = {\n  register,\n  login,\n  me,\n  logout,\n  delete: _delete,\n  changePassword,\n  resetPassword,\n};\n\nexport default authService;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk } from './store';\nimport AuthService from '../services/auth.service';\n\ninterface authState {\n  isLoggedIn: boolean;\n  accessToken: string | null;\n  message: string | null;\n  user: any;\n}\nconst accessToken = localStorage.getItem('accessToken') as string;\nconst user = JSON.parse(localStorage.getItem('user') as string);\nconst initialState: authState = {\n  accessToken,\n  user,\n  isLoggedIn: Boolean(user),\n  message: null,\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    registerSuccess: (state) => {\n      state.isLoggedIn = false;\n    },\n    registerFail: (state) => {\n      state.isLoggedIn = false;\n    },\n    loginSuccess: (state, action: PayloadAction<string>) => {\n      state.isLoggedIn = true;\n      state.accessToken = action.payload;\n      state.message = null;\n    },\n    loginFail: (state, action: PayloadAction<string>) => {\n      state.isLoggedIn = false;\n      state.message = action.payload;\n    },\n    setUser: (state, action: PayloadAction<any>) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.accessToken = null;\n      state.isLoggedIn = false;\n      state.user = null;\n      state.message = null;\n    },\n  },\n});\n\nexport const { registerSuccess, registerFail, loginSuccess, loginFail, logout, setUser } = authSlice.actions;\n\nexport const login = (username: string, password: string): AppThunk => (dispatch) => {\n  AuthService.login(username, password)\n    .then((data) => {\n      dispatch(loginSuccess(data.accessToken));\n    })\n    .catch((error) => {\n      const message =\n        (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\n\n      dispatch(loginFail(message));\n    });\n};\n\nexport default authSlice.reducer;\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import styled from 'styled-components';\n\nconst BaseButton = styled.button`\n  appearance: none;\n  background: none;\n  font-size: 20px;\n  padding: 4px 12px;\n  outline: none;\n  border: 2px solid transparent;\n  color: #0061ff;\n  cursor: pointer;\n  background-color: rgba(112, 76, 182, 0.1);\n  border-radius: 2px;\n  transition: all 0.15s;\n`;\n\nexport default BaseButton;\n","import './Login.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { RootState } from '../../app/store';\nimport AuthService from '../../services/auth.service';\nimport { loginSuccess, loginFail, setUser } from '../../app/authSlice';\nimport { history } from '../../helpers/history';\nimport BaseButton from '../../components/Views/Button/Button';\nimport styled from 'styled-components';\n\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n\nconst Login = (props: any) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const { message } = useSelector((state: RootState) => state.auth);\n\n  const dispatch = useDispatch();\n\n  const onChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    setLoading(true);\n\n    AuthService.login(email, password)\n      .then((data) => {\n        dispatch(loginSuccess(data.accessToken));\n        return AuthService.me();\n      })\n      .then((user) => {\n        dispatch(setUser(user));\n        history.push('/profile');\n        window.location.reload();\n      })\n      .catch((error) => {\n        dispatch(loginFail(error?.response?.data?.message || error?.message || 'Something went wrong'));\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className='login'>\n        <div className='login__header'>\n          <div className=\"header__title\">Sign in</div>\n          <div className=\"header__create\">or <Link to=\"/register\" className='header__link'>create an account</Link></div>\n        </div>\n        <form onSubmit={handleLogin} className=\"login__form\">\n          <div className=\"form__field\">\n            <input\n              type=\"text\"\n              className=\"field__input\"\n              name=\"email\"\n              value={email}\n              placeholder=\"Email\"\n              onChange={onChangeEmail}\n            />\n          </div>\n\n          <div className=\"form__field\">\n            <input\n              type=\"password\"\n              className=\"field__input\"\n              name=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={onChangePassword}\n            />\n          </div>\n\n          <div className='form__actions'>\n            <Link to='/forgot-password' className='actions__forgot-password'>Forgot your password?</Link>\n            <Button disabled={loading}>\n              {loading ? <span className=\"spinner-border spinner-border-sm\">Loading...</span> : <span>Sign in</span>}\n            </Button>\n          </div>\n\n          {message && <div style={{ color: 'red' }}>{message}</div>}\n        </form>\n      </div>\n  );\n};\n\nexport default Login;\n","import './Register.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { RootState } from '../../app/store';\nimport AuthService from '../../services/auth.service';\nimport { registerSuccess, registerFail } from '../../app/authSlice';\nimport BaseButton from '../../components/Views/Button/Button';\nimport styled from 'styled-components';\n\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  margin-left: auto; \n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n\nconst Register = (props: any) => {\n  const [userEmail, setUserEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const { isLoggedIn, message } = useSelector((state: RootState) => state.auth);\n\n  const dispatch = useDispatch();\n\n  const onChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const email = e.target.value;\n    setUserEmail(email);\n  };\n\n  const onChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegistration = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    setLoading(true);\n\n    AuthService.register({ email: userEmail, password })\n      .then((data) => {\n        console.log({ data });\n        if (data) {\n          dispatch(registerSuccess());\n        } else {\n          dispatch(registerFail());\n        }\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <div className=\"register\">\n      <div className=\"register__header\">\n        <div className=\"header__title\">Create an account</div>\n        <div className=\"header__create\">\n          or{' '}\n          <Link to=\"/login\" className=\"header__link\">\n            log in\n          </Link>\n        </div>\n      </div>\n      <form onSubmit={handleRegistration} className=\"register__form\">\n        <div className=\"form__field\">\n          <input\n            type=\"text\"\n            className=\"field__input\"\n            name=\"email\"\n            value={userEmail}\n            placeholder=\"Email\"\n            onChange={onChangeEmail}\n          />\n        </div>\n\n        <div className=\"form__field\">\n          <input\n            type=\"password\"\n            className=\"field__input\"\n            name=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={onChangePassword}\n          />\n        </div>\n\n        <div className=\"form__actions\">\n          <Button disabled={loading}>\n            {loading ? <span className=\"spinner-border spinner-border-sm\">Loading...</span> : <span>Create an account</span>}\n          </Button>\n        </div>\n\n        {message && <div style={{ color: 'red' }}>{message}</div>}\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import './ChangePassword.css';\nimport React, { useState } from 'react';\nimport AuthService from '../../../services/auth.service';\nimport BaseButton from '../../Views/Button/Button';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst Schema = Yup.object().shape({\n  password: Yup.string().required('This field is required'),\n  passwordConfirmation: Yup.string().when('password', {\n    is: (val: string) => (!!(val && val.length > 0)),\n    then: Yup.string().oneOf([Yup.ref('password')], 'Both password need to be the same'),\n  }),\n});\n\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  margin-left: auto;\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n\nconst ChangePassword = (props: any) => {\n  const [loading, setLoading] = useState(false);\n\n  const handlePasswordChange = ({ passwordConfirmation }: { passwordConfirmation: string }) => {\n    setLoading(true);\n\n    AuthService.changePassword(passwordConfirmation)\n      .then((data) => {\n        toast.success('Password was changes successfully!');\n      })\n      .catch((error) => {\n        toast.error(`Failed to change your password: ${error.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__header\">\n        <div className=\"header__title\">Change your password</div>\n      </div>\n      <Formik\n        initialValues={{\n          password: '',\n          passwordConfirmation: '',\n        }}\n        validationSchema={Schema}\n        onSubmit={handlePasswordChange}\n      >\n        {({ isValid, values, errors, handleSubmit, handleChange, handleBlur }) => {\n          return (\n            <form onSubmit={handleSubmit} className=\"login__form\">\n              <div className=\"form__field\">\n                <input\n                  type=\"password\"\n                  className=\"field__input\"\n                  name=\"password\"\n                  value={values.password}\n                  placeholder=\"Password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.password}</p>\n              </div>\n\n              <div className=\"form__field\">\n                <input\n                  type=\"password\"\n                  className=\"field__input\"\n                  name=\"passwordConfirmation\"\n                  value={values.passwordConfirmation}\n                  placeholder=\"Confirm password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.passwordConfirmation}</p>\n              </div>\n\n              <div className=\"form__actions\">\n                <Button disabled={loading || !isValid} type=\"submit\">\n                  {loading ? (\n                    <span className=\"spinner-border spinner-border-sm\">Loading...</span>\n                  ) : (\n                    <span>Change password</span>\n                  )}\n                </Button>\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n      <ToastContainer position={'bottom-right'} autoClose={7000} />\n    </div>\n  );\n};\n\nexport default ChangePassword;\n","import './Profile.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/store';\nimport ChangePassword from '../../components/Controllers/ChangePassword/ChangePassword';\nimport AuthService from '../../services/auth.service';\nimport { logout } from '../../app/authSlice';\nimport styled from 'styled-components';\nimport { history } from '../../helpers/history';\n\nconst DeleteMyAccountButton = styled.button`\n  cursor: pointer;\n  display: inline-block;\n  font-weight: 400;\n  text-align: center;\n  vertical-align: middle;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  border: 1px solid transparent;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  border-radius: 0.25rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out,\n    box-shadow 0.15s ease-in-out;\n  color: #fff;\n  background-color: #dc3545;\n  border-color: #dc3545;\n  margin-top: 50px;\n\n  &:hover {\n    color: #fff;\n    background-color: #c82333;\n    border-color: #bd2130;\n  }\n`;\n\nconst Profile = () => {\n  const [deleteAccountButtonText, setDeleteAccountButtonText] = useState('Delete my account');\n  const [deleteAccountConfirmed, setDeleteAccountConfirmed] = useState(false);\n  const { user } = useSelector((state: RootState) => state.auth);\n  const dispatch = useDispatch();\n\n  const deleteMyAccount = () => {\n    if (deleteAccountConfirmed) {\n      AuthService.delete().then(() => {\n        dispatch(logout());\n        AuthService.logout();\n      });\n    } else {\n      setDeleteAccountButtonText('Are you sure you want to delete your account');\n      setDeleteAccountConfirmed(true);\n    }\n  };\n\n  return (\n    <div className=\"profile\">\n      Profile\n      {user ? (\n        <>\n          <p>id: {user.id}</p>\n          <p>email: {user.email}</p>\n          <p>role: {user.role}</p>\n          <div className=\"profile-actions\">\n            <ChangePassword />\n            <DeleteMyAccountButton onClick={deleteMyAccount}>{deleteAccountButtonText}</DeleteMyAccountButton>\n          </div>\n        </>\n      ) : (\n        false\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { FC } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../app/store';\n\ntype Props = {\n  component: React.JSXElementConstructor<any>;\n  path: string;\n  roles?: string[];\n};\n\nconst PrivateRoute: FC<Props> = ({ component: Component, roles, ...rest }) => {\n  const { isLoggedIn, user } = useSelector((state: RootState) => state.auth);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!isLoggedIn) {\n          // not logged in so redirect to login page with the return url\n          return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />;\n        }\n\n        // check if route is restricted by role\n        if (roles && roles.indexOf(user.role) === -1) {\n          // role not authorized so redirect to home page\n          return <Redirect to={{ pathname: '/' }} />;\n        }\n\n        // authorized so return component\n        return <Component {...props} />;\n      }}\n    />\n  );\n};\n\nexport { PrivateRoute };\n","import './Header.css';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Roles } from '../../../constants/roles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../app/store';\nimport { logout } from '../../../app/authSlice';\nimport AuthService from '../../../services/auth.service';\n\nfunction Header() {\n  const { isLoggedIn, user } = useSelector((state: RootState) => state.auth);\n  const dispatch = useDispatch();\n\n  const logOutUser = () => {\n    dispatch(logout());\n    AuthService.logout();\n  };\n\n  return (\n    <header className=\"main-header\">\n      <nav className=\"navigation\">\n        <div className=\"main-header__logo\">\n          <span className=\"logo__company-name\">Logo</span>\n        </div>\n        <div>\n          Connect wallet\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport { Header };\n","export const Roles = {\n    ADMIN: 'admin',\n    USER: 'user'\n}\n","import React from 'react';\n\nconst Admin = () => {\n\n    return (\n        <div>\n            <h1>Admin</h1>\n            <p>This section can only be accessed by administrators.</p>\n        </div>\n    );\n};\n\nexport default Admin;\n","import './Reset.css';\nimport React, { useState } from 'react';\nimport AuthService from '../../services/auth.service';\nimport BaseButton from '../../components/Views/Button/Button';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useLocation } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\n\nconst OTC_PARAM_NAME = 'otc';\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email().required('This field is required'),\n  password: Yup.string().required('This field is required'),\n  passwordConfirmation: Yup.string().when('password', {\n    is: (val: string) => !!(val && val.length > 0),\n    then: Yup.string().oneOf([Yup.ref('password')], 'Both passwords need to be the same'),\n  }),\n});\n\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  margin-left: auto;\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n\nconst Reset = (props: any) => {\n  const [loading, setLoading] = useState(false);\n  const query = useQuery();\n  const history = useHistory();\n\n  const handlePasswordChange = ({ email, passwordConfirmation }: { email: string; passwordConfirmation: string }) => {\n    setLoading(true);\n\n    AuthService.resetPassword({ email: email, password: passwordConfirmation, otc: query.get(OTC_PARAM_NAME) })\n      .then((data) => {\n        toast.success('Password was changes successfully!', {\n          onClose: () => {\n            history.push('/login', {});\n          },\n        });\n      })\n      .catch((error) => {\n        toast.error(`Failed to change your password: ${error.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__header\">\n        <div className=\"header__title\">Change your password</div>\n      </div>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          passwordConfirmation: '',\n        }}\n        validationSchema={Schema}\n        onSubmit={handlePasswordChange}\n      >\n        {({ isValid, values, errors, handleSubmit, handleChange, handleBlur }) => {\n          return (\n            <form onSubmit={handleSubmit} className=\"login__form\">\n              <div className=\"form__field\">\n                <input\n                  type=\"text\"\n                  className=\"field__input\"\n                  name=\"email\"\n                  value={values.email}\n                  placeholder=\"Email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.email}</p>\n              </div>\n\n              <div className=\"form__field\">\n                <input\n                  type=\"password\"\n                  className=\"field__input\"\n                  name=\"password\"\n                  value={values.password}\n                  placeholder=\"Password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.password}</p>\n              </div>\n\n              <div className=\"form__field\">\n                <input\n                  type=\"password\"\n                  className=\"field__input\"\n                  name=\"passwordConfirmation\"\n                  value={values.passwordConfirmation}\n                  placeholder=\"Confirm password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.passwordConfirmation}</p>\n              </div>\n\n              <div className=\"form__actions\">\n                <Button disabled={loading || !isValid} type=\"submit\">\n                  {loading ? (\n                    <span className=\"spinner-border spinner-border-sm\">Loading...</span>\n                  ) : (\n                    <span>Change password</span>\n                  )}\n                </Button>\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n      <ToastContainer position={'bottom-right'} autoClose={7000} />\n    </div>\n  );\n};\n\nexport default Reset;\n","import './ForgotPassword.css';\nimport React, { useState } from 'react';\nimport AuthService from '../../services/auth.service';\nimport BaseButton from '../../components/Views/Button/Button';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email().required('This field is required'),\n});\n\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  margin-left: auto;\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n\nconst ForgotPassword = (props: any) => {\n  const [loading, setLoading] = useState(false);\n\n  const handlePasswordChange = ({ email }: { email: string }, formikApi: any) => {\n    setLoading(true);\n\n    AuthService.resetPassword({ email: email })\n      .then((data) => {\n        formikApi.resetForm({values: {email: ''}});\n        toast.success('We have send an email to your address. Please follow the instructions from that email');\n      })\n      .catch((error) => {\n        console.log({ error });\n        toast.error(`Failed to send email: ${error?.response?.data?.message || error?.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"forgot-password\">\n      <div className=\"forgot-password__header\">\n        <div className=\"header__title\">Forgot your password</div>\n        <Link to=\"/login\" className=\"header__link\">\n          Log in\n        </Link>\n      </div>\n      <p className=\"forgot-password__para\">\n        Please provide your email and we will send you instructions for password reset.\n      </p>\n      <Formik\n        initialValues={{\n          email: '',\n        }}\n        validationSchema={Schema}\n        onSubmit={handlePasswordChange}\n      >\n        {({ isValid, values, errors, handleSubmit, handleChange, handleBlur }) => {\n          return (\n            <form onSubmit={handleSubmit} className=\"forgot-password__form\">\n              <div className=\"form__field\">\n                <input\n                  type=\"text\"\n                  className=\"field__input\"\n                  name=\"email\"\n                  value={values.email}\n                  placeholder=\"Email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.email}</p>\n              </div>\n\n              <div className=\"form__actions\">\n                <Button disabled={loading || !isValid} type=\"submit\">\n                  {loading ? <span className=\"spinner-border spinner-border-sm\">Loading...</span> : <span>Submit</span>}\n                </Button>\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n      <ToastContainer position={'bottom-right'} autoClose={7000} />\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n","import React from 'react';\nimport './App.css';\nimport Home from './pages/Home/Home';\nimport About from './pages/About/About';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './pages/Login/Login';\nimport Register from './pages/Register/Register';\nimport Profile from './pages/Profile/Profile';\nimport { Header } from './components';\nimport { PrivateRoute } from './components';\nimport { Roles } from './constants/roles';\nimport Admin from './pages/Admin/Admin';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Reset from './pages/Reset/Reset';\nimport ForgotPassword from './pages/ForgotPassword/ForgotPassword';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <PrivateRoute path=\"/profile\" component={Profile} />\n          <PrivateRoute path=\"/admin\" roles={[Roles.ADMIN]} component={Admin} />\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/forgot-password\">\n            <ForgotPassword />\n          </Route>\n          <Route path=\"/reset\" component={Reset} />\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport authReducer from './authSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    counter: counterReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ThemeProvider from 'theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider>\r\n        <App />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}