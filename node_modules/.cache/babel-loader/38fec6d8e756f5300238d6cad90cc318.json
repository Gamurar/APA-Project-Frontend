{"ast":null,"code":"var _jsxFileName = \"/home/gamurar/mastertoken/frontend/src/pages/ForgotPassword/ForgotPassword.tsx\",\n    _s = $RefreshSig$();\n\nimport './ForgotPassword.css';\nimport React, { useState } from 'react';\nimport AuthService from '../../services/auth.service';\nimport BaseButton from '../../components/Views/Button/Button';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schema = Yup.object().shape({\n  email: Yup.string().email().required('This field is required')\n});\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  margin-left: auto;\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n_c = Button;\n\nconst ForgotPassword = props => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n\n  const handlePasswordChange = ({\n    email\n  }, formikApi) => {\n    setLoading(true);\n    AuthService.resetPassword({\n      email: email\n    }).then(data => {\n      formikApi.resetForm({\n        values: {\n          email: ''\n        }\n      });\n      toast.success('We have send an email to your address. Please follow the instructions from that email');\n    }).catch(error => {\n      var _error$response, _error$response$data;\n\n      console.log({\n        error\n      });\n      toast.error(`Failed to send email: ${(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || (error === null || error === void 0 ? void 0 : error.message)}`);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__title\",\n        children: \"Forgot your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"header__link\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"forgot-password__para\",\n      children: \"Please provide your email and we will send you instructions for password reset.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: ''\n      },\n      validationSchema: Schema,\n      onSubmit: handlePasswordChange,\n      children: ({\n        isValid,\n        values,\n        errors,\n        handleSubmit,\n        handleChange,\n        handleBlur\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"forgot-password__form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"field__input\",\n              name: \"email\",\n              value: values.email,\n              placeholder: \"Email\",\n              onBlur: handleBlur,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field__error\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__actions\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loading || !isValid,\n              type: \"submit\",\n              children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 30\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 101\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: 'bottom-right',\n      autoClose: 7000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPassword, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n\n_c2 = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ForgotPassword\");","map":{"version":3,"sources":["/home/gamurar/mastertoken/frontend/src/pages/ForgotPassword/ForgotPassword.tsx"],"names":["React","useState","AuthService","BaseButton","styled","Formik","Yup","ToastContainer","toast","Link","Schema","object","shape","email","string","required","Button","ForgotPassword","props","loading","setLoading","handlePasswordChange","formikApi","resetPassword","then","data","resetForm","values","success","catch","error","console","log","response","message","finally","isValid","errors","handleSubmit","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import './ForgotPassword.css';\nimport React, { useState } from 'react';\nimport AuthService from '../../services/auth.service';\nimport BaseButton from '../../components/Views/Button/Button';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email().required('This field is required'),\n});\n\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  margin-left: auto;\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n\nconst ForgotPassword = (props: any) => {\n  const [loading, setLoading] = useState(false);\n\n  const handlePasswordChange = ({ email }: { email: string }, formikApi: any) => {\n    setLoading(true);\n\n    AuthService.resetPassword({ email: email })\n      .then((data) => {\n        formikApi.resetForm({values: {email: ''}});\n        toast.success('We have send an email to your address. Please follow the instructions from that email');\n      })\n      .catch((error) => {\n        console.log({ error });\n        toast.error(`Failed to send email: ${error?.response?.data?.message || error?.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"forgot-password\">\n      <div className=\"forgot-password__header\">\n        <div className=\"header__title\">Forgot your password</div>\n        <Link to=\"/login\" className=\"header__link\">\n          Log in\n        </Link>\n      </div>\n      <p className=\"forgot-password__para\">\n        Please provide your email and we will send you instructions for password reset.\n      </p>\n      <Formik\n        initialValues={{\n          email: '',\n        }}\n        validationSchema={Schema}\n        onSubmit={handlePasswordChange}\n      >\n        {({ isValid, values, errors, handleSubmit, handleChange, handleBlur }) => {\n          return (\n            <form onSubmit={handleSubmit} className=\"forgot-password__form\">\n              <div className=\"form__field\">\n                <input\n                  type=\"text\"\n                  className=\"field__input\"\n                  name=\"email\"\n                  value={values.email}\n                  placeholder=\"Email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.email}</p>\n              </div>\n\n              <div className=\"form__actions\">\n                <Button disabled={loading || !isValid} type=\"submit\">\n                  {loading ? <span className=\"spinner-border spinner-border-sm\">Loading...</span> : <span>Submit</span>}\n                </Button>\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n      <ToastContainer position={'bottom-right'} autoClose={7000} />\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}