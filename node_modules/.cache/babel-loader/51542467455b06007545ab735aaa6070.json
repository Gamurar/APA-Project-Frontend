{"ast":null,"code":"import _slicedToArray from\"/home/gamurar/mastertoken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/gamurar/mastertoken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import'./ChangePassword.css';import React,{useState}from'react';import AuthService from'../../../services/auth.service';import BaseButton from'../../Views/Button/Button';import styled from'styled-components';import{Formik}from'formik';import*as Yup from'yup';import{ToastContainer,toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Schema=Yup.object().shape({password:Yup.string().required('This field is required'),passwordConfirmation:Yup.string().when('password',{is:function is(val){return!!(val&&val.length>0);},then:Yup.string().oneOf([Yup.ref('password')],'Both password need to be the same')})});var Button=styled(BaseButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  margin-left: auto;\\n  &:hover,\\n  &:focus {\\n    border: 2px solid rgba(112, 76, 182, 0.4);\\n  }\\n\\n  &:active {\\n    background-color: rgba(112, 76, 182, 0.2);\\n  }\\n\"])));var ChangePassword=function ChangePassword(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var handlePasswordChange=function handlePasswordChange(_ref){var passwordConfirmation=_ref.passwordConfirmation;setLoading(true);AuthService.changePassword(passwordConfirmation).then(function(data){toast.success('Password was changes successfully!');}).catch(function(error){toast.error(\"Failed to change your password: \".concat(error.message));}).finally(function(){setLoading(false);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"login__header\",children:/*#__PURE__*/_jsx(\"div\",{className:\"header__title\",children:\"Change your password\"})}),/*#__PURE__*/_jsx(Formik,{initialValues:{password:'',passwordConfirmation:''},validationSchema:Schema,onSubmit:handlePasswordChange,children:function children(_ref2){var isValid=_ref2.isValid,values=_ref2.values,errors=_ref2.errors,handleSubmit=_ref2.handleSubmit,handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"login__form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form__field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"field__input\",name:\"password\",value:values.password,placeholder:\"Password\",onBlur:handleBlur,onChange:handleChange}),/*#__PURE__*/_jsx(\"p\",{className:\"field__error\",children:errors.password})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form__field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"field__input\",name:\"passwordConfirmation\",value:values.passwordConfirmation,placeholder:\"Confirm password\",onBlur:handleBlur,onChange:handleChange}),/*#__PURE__*/_jsx(\"p\",{className:\"field__error\",children:errors.passwordConfirmation})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form__actions\",children:/*#__PURE__*/_jsx(Button,{disabled:loading||!isValid,type:\"submit\",children:loading?/*#__PURE__*/_jsx(\"span\",{className:\"spinner-border spinner-border-sm\",children:\"Loading...\"}):/*#__PURE__*/_jsx(\"span\",{children:\"Change password\"})})})]});}}),/*#__PURE__*/_jsx(ToastContainer,{position:'bottom-right',autoClose:7000})]});};export default ChangePassword;","map":{"version":3,"sources":["/home/gamurar/mastertoken/frontend/src/components/Controllers/ChangePassword/ChangePassword.tsx"],"names":["React","useState","AuthService","BaseButton","styled","Formik","Yup","ToastContainer","toast","Schema","object","shape","password","string","required","passwordConfirmation","when","is","val","length","then","oneOf","ref","Button","ChangePassword","props","loading","setLoading","handlePasswordChange","changePassword","data","success","catch","error","message","finally","isValid","values","errors","handleSubmit","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import './ChangePassword.css';\nimport React, { useState } from 'react';\nimport AuthService from '../../../services/auth.service';\nimport BaseButton from '../../Views/Button/Button';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst Schema = Yup.object().shape({\n  password: Yup.string().required('This field is required'),\n  passwordConfirmation: Yup.string().when('password', {\n    is: (val: string) => (!!(val && val.length > 0)),\n    then: Yup.string().oneOf([Yup.ref('password')], 'Both password need to be the same'),\n  }),\n});\n\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  margin-left: auto;\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n\nconst ChangePassword = (props: any) => {\n  const [loading, setLoading] = useState(false);\n\n  const handlePasswordChange = ({ passwordConfirmation }: { passwordConfirmation: string }) => {\n    setLoading(true);\n\n    AuthService.changePassword(passwordConfirmation)\n      .then((data) => {\n        toast.success('Password was changes successfully!');\n      })\n      .catch((error) => {\n        toast.error(`Failed to change your password: ${error.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__header\">\n        <div className=\"header__title\">Change your password</div>\n      </div>\n      <Formik\n        initialValues={{\n          password: '',\n          passwordConfirmation: '',\n        }}\n        validationSchema={Schema}\n        onSubmit={handlePasswordChange}\n      >\n        {({ isValid, values, errors, handleSubmit, handleChange, handleBlur }) => {\n          return (\n            <form onSubmit={handleSubmit} className=\"login__form\">\n              <div className=\"form__field\">\n                <input\n                  type=\"password\"\n                  className=\"field__input\"\n                  name=\"password\"\n                  value={values.password}\n                  placeholder=\"Password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.password}</p>\n              </div>\n\n              <div className=\"form__field\">\n                <input\n                  type=\"password\"\n                  className=\"field__input\"\n                  name=\"passwordConfirmation\"\n                  value={values.passwordConfirmation}\n                  placeholder=\"Confirm password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.passwordConfirmation}</p>\n              </div>\n\n              <div className=\"form__actions\">\n                <Button disabled={loading || !isValid} type=\"submit\">\n                  {loading ? (\n                    <span className=\"spinner-border spinner-border-sm\">Loading...</span>\n                  ) : (\n                    <span>Change password</span>\n                  )}\n                </Button>\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n      <ToastContainer position={'bottom-right'} autoClose={7000} />\n    </div>\n  );\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}