{"ast":null,"code":"import _objectSpread from\"/home/gamurar/mastertoken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"/home/gamurar/mastertoken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React from'react';import styled,{createGlobalStyle,css,ThemeProvider as StyledComponentsThemeProvider}from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";export var MEDIA_WIDTHS={upToExtraSmall:500,upToSmall:720,upToMedium:960,upToLarge:1280};var mediaWidthTemplates=Object.keys(MEDIA_WIDTHS).reduce(function(accumulator,size){;accumulator[size]=function(a,b,c){return css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n      @media (max-width: \",\"px) {\\n        \",\"\\n      }\\n    \"])),MEDIA_WIDTHS[size],css(a,b,c));};return accumulator;},{});export function colors(){return{white:'#FFFFFF',black:'#292F30',accentColor:'#1E2223',primary65:'#595959'};}export function theme(){return _objectSpread(_objectSpread({},colors()),{},{grids:{sm:8,md:12,lg:24},//shadows\nshadow1:'#2F80ED',// media queries\nmediaWidth:mediaWidthTemplates,// css snippets\nflexColumnNoWrap:css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n      display: flex;\\n      flex-flow: column nowrap;\\n    \"]))),flexRowNoWrap:css(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n      display: flex;\\n      flex-flow: row nowrap;\\n    \"])))});}export default function ThemeProvider(_ref){var children=_ref.children;return/*#__PURE__*/_jsx(StyledComponentsThemeProvider,{theme:theme,children:children});}var TextWrapper=styled.span(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: \",\";\\n  font-weight: \",\";\\n  line-height: \",\";\\n\"])),function(_ref2){var color=_ref2.color,theme=_ref2.theme;return theme[color];},function(_ref3){var fontSize=_ref3.fontSize;return fontSize&&\"\".concat(fontSize,\"px\");},function(_ref4){var fontWeight=_ref4.fontWeight;return fontWeight&&\"\".concat(fontWeight);},function(_ref5){var lineHeight=_ref5.lineHeight;return lineHeight&&\"\".concat(lineHeight,\"px\");});export var TYPE={H2:function H2(props){return/*#__PURE__*/_jsx(TextWrapper,_objectSpread({fontWeight:700,fontSize:18,lineHeight:21,color:'black'},props));},caption:function caption(props){return/*#__PURE__*/_jsx(TextWrapper,_objectSpread({fontWeight:400,fontSize:14,lineHeight:16,color:'primary65'},props));}};export var ThemedGlobalStyle=createGlobalStyle(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\nhtml {\\n  color: \",\";\\n  background-color: \",\" !important;\\n}\\n\"])),function(_ref6){var theme=_ref6.theme;return theme.black;},function(_ref7){var theme=_ref7.theme;return theme.white;});","map":{"version":3,"sources":["/home/gamurar/mastertoken/frontend/src/theme/index.tsx"],"names":["React","styled","createGlobalStyle","css","ThemeProvider","StyledComponentsThemeProvider","MEDIA_WIDTHS","upToExtraSmall","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","Object","keys","reduce","accumulator","size","a","b","c","colors","white","black","accentColor","primary65","theme","grids","sm","md","lg","shadow1","mediaWidth","flexColumnNoWrap","flexRowNoWrap","children","TextWrapper","span","color","fontSize","fontWeight","lineHeight","TYPE","H2","props","caption","ThemedGlobalStyle"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport styled, {\n  createGlobalStyle,\n  css,\n  DefaultTheme,\n  ThemeProvider as StyledComponentsThemeProvider,\n} from 'styled-components'\nimport { Colors } from './styled'\n\nexport const MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 720,\n  upToMedium: 960,\n  upToLarge: 1280,\n}\n\nconst mediaWidthTemplates: { [width in keyof typeof MEDIA_WIDTHS]: typeof css } = Object.keys(MEDIA_WIDTHS).reduce(\n  (accumulator, size) => {\n    ;(accumulator as any)[size] = (a: any, b: any, c: any) => css`\n      @media (max-width: ${(MEDIA_WIDTHS as any)[size]}px) {\n        ${css(a, b, c)}\n      }\n    `\n    return accumulator\n  },\n  {}\n) as any\n\nexport function colors(): Colors {\n  return {\n    white: '#FFFFFF',\n    black: '#292F30',\n    accentColor: '#1E2223',\n    primary65: '#595959',\n  }\n}\n\nexport function theme(): DefaultTheme {\n  return {\n    ...colors(),\n\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24,\n    },\n\n    //shadows\n    shadow1:  '#2F80ED',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `,\n  }\n}\n\nexport default function ThemeProvider({ children }: { children: React.ReactNode }) {\n  return <StyledComponentsThemeProvider theme={theme}>{children}</StyledComponentsThemeProvider>\n}\n\nconst TextWrapper = styled.span<{ color: keyof Colors; fontWeight: number; fontSize: number; lineHeight: number }>`\n  color: ${({ color, theme }) => (theme as any)[color]};\n  font-size: ${({fontSize}) => fontSize && `${fontSize}px`};\n  font-weight: ${({fontWeight}) => fontWeight && `${fontWeight}`};\n  line-height: ${({lineHeight}) => lineHeight && `${lineHeight}px`};\n`\n\nexport const TYPE = {\n  H2(props: any) {\n    return <TextWrapper fontWeight={700} fontSize={18} lineHeight={21} color={'black'} {...props} />\n  },\n  caption(props: any) {\n    return <TextWrapper fontWeight={400} fontSize={14} lineHeight={16} color={'primary65'} {...props} />\n  },\n}\n\nexport const ThemedGlobalStyle = createGlobalStyle`\nhtml {\n  color: ${({ theme }) => theme.black};\n  background-color: ${({ theme }) => theme.white} !important;\n}\n`\n"]},"metadata":{},"sourceType":"module"}