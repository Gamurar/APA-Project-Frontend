{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { setOpenModal } from './actions';\nconst initialState = {\n  openModal: null\n};\nexport default createReducer(initialState, builder => builder.addCase(setOpenModal, (state, action) => {\n  state.openModal = action.payload;\n}));","map":{"version":3,"sources":["/home/gamurar/APA/frontend/src/state/application/reducer.tsx"],"names":["createReducer","setOpenModal","initialState","openModal","builder","addCase","state","action","payload"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAA2BC,YAA3B,QAA+C,WAA/C;AAMA,MAAMC,YAA8B,GAAG;AACrCC,EAAAA,SAAS,EAAE;AAD0B,CAAvC;AAIA,eAAeH,aAAa,CAACE,YAAD,EAAgBE,OAAD,IACzCA,OAAO,CAACC,OAAR,CAAgBJ,YAAhB,EAA8B,CAACK,KAAD,EAAQC,MAAR,KAAmB;AAC/CD,EAAAA,KAAK,CAACH,SAAN,GAAkBI,MAAM,CAACC,OAAzB;AACD,CAFD,CAD0B,CAA5B","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { ApplicationModal, setOpenModal } from './actions'\n\nexport interface ApplicationState {\n  readonly openModal: ApplicationModal | null\n}\n\nconst initialState: ApplicationState = {\n  openModal: null,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(setOpenModal, (state, action) => {\n    state.openModal = action.payload\n  })\n)\n"]},"metadata":{},"sourceType":"module"}