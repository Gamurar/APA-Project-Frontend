{"ast":null,"code":"var _jsxFileName = \"/home/gamurar/mastertoken/frontend/src/components/Views/Modals/ConnectWalletModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { useModalOpen } from 'state/application/hooks';\nimport { ApplicationModal } from 'state/application/actions';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ConnectWalletModal = props => {\n  _s();\n\n  const isOpen = useModalOpen(ApplicationModal.CONNECT_WALLET);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isOpen && /*#__PURE__*/_jsxDEV(ModalContainer, {\n      children: [\"modal is open: \", isOpen]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 23\n    }, this)\n  }, void 0, false);\n};\n\n_s(ConnectWalletModal, \"FJSYwzzwxk0TXZwe1CzumBfuoX8=\", false, function () {\n  return [useModalOpen];\n});\n\n_c = ConnectWalletModal;\nconst ModalContainer = styled.div`\n  position: absolute;\n`;\n_c2 = ModalContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConnectWalletModal\");\n$RefreshReg$(_c2, \"ModalContainer\");","map":{"version":3,"sources":["/home/gamurar/mastertoken/frontend/src/components/Views/Modals/ConnectWalletModal.tsx"],"names":["useModalOpen","ApplicationModal","styled","ConnectWalletModal","props","isOpen","CONNECT_WALLET","ModalContainer","div"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,yBAA7B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAgB;AAAA;;AAChD,QAAMC,MAAM,GAAGL,YAAY,CAACC,gBAAgB,CAACK,cAAlB,CAA3B;AAEA,sBAAO;AAAA,cAAGD,MAAM,iBAAI,QAAC,cAAD;AAAA,oCAAgCA,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAb,mBAAP;AACD,CAJM;;GAAMF,kB;UACIH,Y;;;KADJG,kB;AAMb,MAAMI,cAAc,GAAGL,MAAM,CAACM,GAAI;AAClC;AACA,CAFA;MAAMD,c","sourcesContent":["import { useModalOpen } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/actions'\nimport styled from 'styled-components'\n\nexport const ConnectWalletModal = (props: any) => {\n  const isOpen = useModalOpen(ApplicationModal.CONNECT_WALLET)\n\n  return <>{isOpen && <ModalContainer>modal is open: {isOpen}</ModalContainer>}</>\n}\n\nconst ModalContainer = styled.div`\n  position: absolute;\n`\n"]},"metadata":{},"sourceType":"module"}