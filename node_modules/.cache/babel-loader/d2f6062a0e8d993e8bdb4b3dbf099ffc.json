{"ast":null,"code":"import _slicedToArray from\"/home/gamurar/mastertoken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/gamurar/mastertoken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import'./Reset.css';import React,{useState}from'react';import AuthService from'../../services/auth.service';import BaseButton from'../../components/Views/Button/Button';import styled from'styled-components';import{Formik}from'formik';import*as Yup from'yup';import{ToastContainer,toast}from'react-toastify';import{useLocation}from'react-router-dom';import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OTC_PARAM_NAME='otc';var useQuery=function useQuery(){return new URLSearchParams(useLocation().search);};var Schema=Yup.object().shape({email:Yup.string().email().required('This field is required'),password:Yup.string().required('This field is required'),passwordConfirmation:Yup.string().when('password',{is:function is(val){return!!(val&&val.length>0);},then:Yup.string().oneOf([Yup.ref('password')],'Both passwords need to be the same')})});var Button=styled(BaseButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  margin-left: auto;\\n  &:hover,\\n  &:focus {\\n    border: 2px solid rgba(112, 76, 182, 0.4);\\n  }\\n\\n  &:active {\\n    background-color: rgba(112, 76, 182, 0.2);\\n  }\\n\"])));var Reset=function Reset(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var query=useQuery();var history=useHistory();var handlePasswordChange=function handlePasswordChange(_ref){var email=_ref.email,passwordConfirmation=_ref.passwordConfirmation;setLoading(true);AuthService.resetPassword({email:email,password:passwordConfirmation,otc:query.get(OTC_PARAM_NAME)}).then(function(data){toast.success('Password was changes successfully!',{onClose:function onClose(){history.push('/login',{});}});}).catch(function(error){toast.error(\"Failed to change your password: \".concat(error.message));}).finally(function(){setLoading(false);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"login__header\",children:/*#__PURE__*/_jsx(\"div\",{className:\"header__title\",children:\"Change your password\"})}),/*#__PURE__*/_jsx(Formik,{initialValues:{email:'',password:'',passwordConfirmation:''},validationSchema:Schema,onSubmit:handlePasswordChange,children:function children(_ref2){var isValid=_ref2.isValid,values=_ref2.values,errors=_ref2.errors,handleSubmit=_ref2.handleSubmit,handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"login__form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form__field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"field__input\",name:\"email\",value:values.email,placeholder:\"Email\",onBlur:handleBlur,onChange:handleChange}),/*#__PURE__*/_jsx(\"p\",{className:\"field__error\",children:errors.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form__field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"field__input\",name:\"password\",value:values.password,placeholder:\"Password\",onBlur:handleBlur,onChange:handleChange}),/*#__PURE__*/_jsx(\"p\",{className:\"field__error\",children:errors.password})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form__field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"field__input\",name:\"passwordConfirmation\",value:values.passwordConfirmation,placeholder:\"Confirm password\",onBlur:handleBlur,onChange:handleChange}),/*#__PURE__*/_jsx(\"p\",{className:\"field__error\",children:errors.passwordConfirmation})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form__actions\",children:/*#__PURE__*/_jsx(Button,{disabled:loading||!isValid,type:\"submit\",children:loading?/*#__PURE__*/_jsx(\"span\",{className:\"spinner-border spinner-border-sm\",children:\"Loading...\"}):/*#__PURE__*/_jsx(\"span\",{children:\"Change password\"})})})]});}}),/*#__PURE__*/_jsx(ToastContainer,{position:'bottom-right',autoClose:7000})]});};export default Reset;","map":{"version":3,"sources":["/home/gamurar/mastertoken/frontend/src/pages/Reset/Reset.tsx"],"names":["React","useState","AuthService","BaseButton","styled","Formik","Yup","ToastContainer","toast","useLocation","useHistory","OTC_PARAM_NAME","useQuery","URLSearchParams","search","Schema","object","shape","email","string","required","password","passwordConfirmation","when","is","val","length","then","oneOf","ref","Button","Reset","props","loading","setLoading","query","history","handlePasswordChange","resetPassword","otc","get","data","success","onClose","push","catch","error","message","finally","isValid","values","errors","handleSubmit","handleChange","handleBlur"],"mappings":"sVAAA,MAAO,aAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,sCAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,cAAT,CAAyBC,KAAzB,KAAsC,gBAAtC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,KAAvB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,MAAO,IAAIC,CAAAA,eAAJ,CAAoBJ,WAAW,GAAGK,MAAlC,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,MAAM,CAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB,CAChCC,KAAK,CAAEZ,GAAG,CAACa,MAAJ,GAAaD,KAAb,GAAqBE,QAArB,CAA8B,wBAA9B,CADyB,CAEhCC,QAAQ,CAAEf,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAFsB,CAGhCE,oBAAoB,CAAEhB,GAAG,CAACa,MAAJ,GAAaI,IAAb,CAAkB,UAAlB,CAA8B,CAClDC,EAAE,CAAE,YAACC,GAAD,QAAiB,CAAC,EAAEA,GAAG,EAAIA,GAAG,CAACC,MAAJ,CAAa,CAAtB,CAAlB,EAD8C,CAElDC,IAAI,CAAErB,GAAG,CAACa,MAAJ,GAAaS,KAAb,CAAmB,CAACtB,GAAG,CAACuB,GAAJ,CAAQ,UAAR,CAAD,CAAnB,CAA0C,oCAA1C,CAF4C,CAA9B,CAHU,CAAnB,CAAf,CASA,GAAMC,CAAAA,MAAM,CAAG1B,MAAM,CAACD,UAAD,CAAT,gQAAZ,CAaA,GAAM4B,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAgB,CAC5B,cAA8B/B,QAAQ,CAAC,KAAD,CAAtC,wCAAOgC,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,KAAK,CAAGvB,QAAQ,EAAtB,CACA,GAAMwB,CAAAA,OAAO,CAAG1B,UAAU,EAA1B,CAEA,GAAM2B,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAAsF,IAAnFnB,CAAAA,KAAmF,MAAnFA,KAAmF,CAA5EI,oBAA4E,MAA5EA,oBAA4E,CACjHY,UAAU,CAAC,IAAD,CAAV,CAEAhC,WAAW,CAACoC,aAAZ,CAA0B,CAAEpB,KAAK,CAAEA,KAAT,CAAgBG,QAAQ,CAAEC,oBAA1B,CAAgDiB,GAAG,CAAEJ,KAAK,CAACK,GAAN,CAAU7B,cAAV,CAArD,CAA1B,EACGgB,IADH,CACQ,SAACc,IAAD,CAAU,CACdjC,KAAK,CAACkC,OAAN,CAAc,oCAAd,CAAoD,CAClDC,OAAO,CAAE,kBAAM,CACbP,OAAO,CAACQ,IAAR,CAAa,QAAb,CAAuB,EAAvB,EACD,CAHiD,CAApD,EAKD,CAPH,EAQGC,KARH,CAQS,SAACC,KAAD,CAAW,CAChBtC,KAAK,CAACsC,KAAN,2CAA+CA,KAAK,CAACC,OAArD,GACD,CAVH,EAWGC,OAXH,CAWW,UAAM,CACbd,UAAU,CAAC,KAAD,CAAV,CACD,CAbH,EAcD,CAjBD,CAmBA,mBACE,aAAK,SAAS,CAAC,OAAf,wBACE,YAAK,SAAS,CAAC,eAAf,uBACE,YAAK,SAAS,CAAC,eAAf,kCADF,EADF,cAIE,KAAC,MAAD,EACE,aAAa,CAAE,CACbhB,KAAK,CAAE,EADM,CAEbG,QAAQ,CAAE,EAFG,CAGbC,oBAAoB,CAAE,EAHT,CADjB,CAME,gBAAgB,CAAEP,MANpB,CAOE,QAAQ,CAAEsB,oBAPZ,UASG,wBAAyE,IAAtEY,CAAAA,OAAsE,OAAtEA,OAAsE,CAA7DC,MAA6D,OAA7DA,MAA6D,CAArDC,MAAqD,OAArDA,MAAqD,CAA7CC,YAA6C,OAA7CA,YAA6C,CAA/BC,YAA+B,OAA/BA,YAA+B,CAAjBC,UAAiB,OAAjBA,UAAiB,CACxE,mBACE,cAAM,QAAQ,CAAEF,YAAhB,CAA8B,SAAS,CAAC,aAAxC,wBACE,aAAK,SAAS,CAAC,aAAf,wBACE,cACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,cAFZ,CAGE,IAAI,CAAC,OAHP,CAIE,KAAK,CAAEF,MAAM,CAAChC,KAJhB,CAKE,WAAW,CAAC,OALd,CAME,MAAM,CAAEoC,UANV,CAOE,QAAQ,CAAED,YAPZ,EADF,cAUE,UAAG,SAAS,CAAC,cAAb,UAA6BF,MAAM,CAACjC,KAApC,EAVF,GADF,cAcE,aAAK,SAAS,CAAC,aAAf,wBACE,cACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAC,cAFZ,CAGE,IAAI,CAAC,UAHP,CAIE,KAAK,CAAEgC,MAAM,CAAC7B,QAJhB,CAKE,WAAW,CAAC,UALd,CAME,MAAM,CAAEiC,UANV,CAOE,QAAQ,CAAED,YAPZ,EADF,cAUE,UAAG,SAAS,CAAC,cAAb,UAA6BF,MAAM,CAAC9B,QAApC,EAVF,GAdF,cA2BE,aAAK,SAAS,CAAC,aAAf,wBACE,cACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAC,cAFZ,CAGE,IAAI,CAAC,sBAHP,CAIE,KAAK,CAAE6B,MAAM,CAAC5B,oBAJhB,CAKE,WAAW,CAAC,kBALd,CAME,MAAM,CAAEgC,UANV,CAOE,QAAQ,CAAED,YAPZ,EADF,cAUE,UAAG,SAAS,CAAC,cAAb,UAA6BF,MAAM,CAAC7B,oBAApC,EAVF,GA3BF,cAwCE,YAAK,SAAS,CAAC,eAAf,uBACE,KAAC,MAAD,EAAQ,QAAQ,CAAEW,OAAO,EAAI,CAACgB,OAA9B,CAAuC,IAAI,CAAC,QAA5C,UACGhB,OAAO,cACN,aAAM,SAAS,CAAC,kCAAhB,wBADM,cAGN,yCAJJ,EADF,EAxCF,GADF,CAoDD,CA9DH,EAJF,cAoEE,KAAC,cAAD,EAAgB,QAAQ,CAAE,cAA1B,CAA0C,SAAS,CAAE,IAArD,EApEF,GADF,CAwED,CAhGD,CAkGA,cAAeF,CAAAA,KAAf","sourcesContent":["import './Reset.css';\nimport React, { useState } from 'react';\nimport AuthService from '../../services/auth.service';\nimport BaseButton from '../../components/Views/Button/Button';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useLocation } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\n\nconst OTC_PARAM_NAME = 'otc';\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email().required('This field is required'),\n  password: Yup.string().required('This field is required'),\n  passwordConfirmation: Yup.string().when('password', {\n    is: (val: string) => !!(val && val.length > 0),\n    then: Yup.string().oneOf([Yup.ref('password')], 'Both passwords need to be the same'),\n  }),\n});\n\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  margin-left: auto;\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n\nconst Reset = (props: any) => {\n  const [loading, setLoading] = useState(false);\n  const query = useQuery();\n  const history = useHistory();\n\n  const handlePasswordChange = ({ email, passwordConfirmation }: { email: string; passwordConfirmation: string }) => {\n    setLoading(true);\n\n    AuthService.resetPassword({ email: email, password: passwordConfirmation, otc: query.get(OTC_PARAM_NAME) })\n      .then((data) => {\n        toast.success('Password was changes successfully!', {\n          onClose: () => {\n            history.push('/login', {});\n          },\n        });\n      })\n      .catch((error) => {\n        toast.error(`Failed to change your password: ${error.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__header\">\n        <div className=\"header__title\">Change your password</div>\n      </div>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          passwordConfirmation: '',\n        }}\n        validationSchema={Schema}\n        onSubmit={handlePasswordChange}\n      >\n        {({ isValid, values, errors, handleSubmit, handleChange, handleBlur }) => {\n          return (\n            <form onSubmit={handleSubmit} className=\"login__form\">\n              <div className=\"form__field\">\n                <input\n                  type=\"text\"\n                  className=\"field__input\"\n                  name=\"email\"\n                  value={values.email}\n                  placeholder=\"Email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.email}</p>\n              </div>\n\n              <div className=\"form__field\">\n                <input\n                  type=\"password\"\n                  className=\"field__input\"\n                  name=\"password\"\n                  value={values.password}\n                  placeholder=\"Password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.password}</p>\n              </div>\n\n              <div className=\"form__field\">\n                <input\n                  type=\"password\"\n                  className=\"field__input\"\n                  name=\"passwordConfirmation\"\n                  value={values.passwordConfirmation}\n                  placeholder=\"Confirm password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.passwordConfirmation}</p>\n              </div>\n\n              <div className=\"form__actions\">\n                <Button disabled={loading || !isValid} type=\"submit\">\n                  {loading ? (\n                    <span className=\"spinner-border spinner-border-sm\">Loading...</span>\n                  ) : (\n                    <span>Change password</span>\n                  )}\n                </Button>\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n      <ToastContainer position={'bottom-right'} autoClose={7000} />\n    </div>\n  );\n};\n\nexport default Reset;\n"]},"metadata":{},"sourceType":"module"}