{"ast":null,"code":"var _jsxFileName = \"/home/gamurar/mastertoken/react-boilerplate/src/features/counter/Counter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { decrement, increment, incrementByAmount, incrementAsync, selectCount } from './counterSlice';\nimport BaseButton from '../../components/Views/Button/Button';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n_c = Row;\nconst Button = styled(BaseButton)`\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n_c2 = Button;\nconst AsyncButton = styled(BaseButton)`\n  position: relative;\n  margin-left: 8px;\n\n  &:after {\n    content: '';\n    background-color: rgba(112, 76, 182, 0.15);\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    transition: width 1s linear, opacity 0.5s ease 1s;\n  }\n\n  &:active:after {\n    width: 0%;\n    opacity: 1;\n    transition: 0s;\n  }\n`;\n_c3 = AsyncButton;\nconst Value = styled.span`\n  font-size: 60px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-top: 2px;\n  font-family: 'Courier New', Courier, monospace;\n`;\n_c4 = Value;\nconst Textbox = styled.input`\n  font-size: 22px;\n  padding: 2px;\n  width: 64px;\n  text-align: center;\n  margin-right: 8px;\n`;\n_c5 = Textbox;\nexport function Counter() {\n  _s();\n\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        \"aria-label\": \"Increment value\",\n        onClick: () => dispatch(increment()),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Value, {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        \"aria-label\": \"Decrement value\",\n        onClick: () => dispatch(decrement()),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Textbox, {\n        \"aria-label\": \"Set increment amount\",\n        value: incrementAmount,\n        onChange: e => setIncrementAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => dispatch(incrementByAmount(Number(incrementAmount) || 0)),\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AsyncButton, {\n        onClick: () => dispatch(incrementAsync(Number(incrementAmount) || 0)),\n        children: \"Add Async\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Counter, \"n8Hn+dfjiOyoP6EA1ZJKfEKeUOY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c6 = Counter;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"AsyncButton\");\n$RefreshReg$(_c4, \"Value\");\n$RefreshReg$(_c5, \"Textbox\");\n$RefreshReg$(_c6, \"Counter\");","map":{"version":3,"sources":["/home/gamurar/mastertoken/react-boilerplate/src/features/counter/Counter.tsx"],"names":["React","useState","useSelector","useDispatch","decrement","increment","incrementByAmount","incrementAsync","selectCount","BaseButton","styled","Row","div","Button","AsyncButton","Value","span","Textbox","input","Counter","count","dispatch","incrementAmount","setIncrementAmount","e","target","value","Number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,iBAA/B,EAAkDC,cAAlD,EAAkEC,WAAlE,QAAqF,gBAArF;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,GAAG,GAAGD,MAAM,CAACE,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMD,G;AAUN,MAAME,MAAM,GAAGH,MAAM,CAACD,UAAD,CAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMI,M;AAWN,MAAMC,WAAW,GAAGJ,MAAM,CAACD,UAAD,CAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;MAAMK,W;AAwBN,MAAMC,KAAK,GAAGL,MAAM,CAACM,IAAK;AAC1B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,K;AAQN,MAAME,OAAO,GAAGP,MAAM,CAACQ,KAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,O;AAQN,OAAO,SAASE,OAAT,GAAmB;AAAA;;AACxB,QAAMC,KAAK,GAAGlB,WAAW,CAACM,WAAD,CAAzB;AACA,QAAMa,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,GAAD,CAAtD;AAEA,sBACE;AAAA,4BACE,QAAC,GAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,sBAAW,iBAAnB;AAAqC,QAAA,OAAO,EAAE,MAAMoB,QAAQ,CAAChB,SAAS,EAAV,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAA,kBAAQe;AAAR;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,MAAD;AAAQ,sBAAW,iBAAnB;AAAqC,QAAA,OAAO,EAAE,MAAMC,QAAQ,CAACjB,SAAS,EAAV,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,GAAD;AAAA,8BACE,QAAC,OAAD;AACE,sBAAW,sBADb;AAEE,QAAA,KAAK,EAAEkB,eAFT;AAGE,QAAA,QAAQ,EAAGE,CAAD,IAAOD,kBAAkB,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAHrC;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAML,QAAQ,CAACf,iBAAiB,CAACqB,MAAM,CAACL,eAAD,CAAN,IAA2B,CAA5B,CAAlB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,MAAMD,QAAQ,CAACd,cAAc,CAACoB,MAAM,CAACL,eAAD,CAAN,IAA2B,CAA5B,CAAf,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA3BeH,O;UACAjB,W,EACGC,W;;;MAFHgB,O","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { decrement, increment, incrementByAmount, incrementAsync, selectCount } from './counterSlice';\nimport BaseButton from '../../components/Views/Button/Button';\nimport styled from 'styled-components';\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n\nconst Button = styled(BaseButton)`\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n\nconst AsyncButton = styled(BaseButton)`\n  position: relative;\n  margin-left: 8px;\n\n  &:after {\n    content: '';\n    background-color: rgba(112, 76, 182, 0.15);\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    transition: width 1s linear, opacity 0.5s ease 1s;\n  }\n\n  &:active:after {\n    width: 0%;\n    opacity: 1;\n    transition: 0s;\n  }\n`;\n\nconst Value = styled.span`\n  font-size: 60px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-top: 2px;\n  font-family: 'Courier New', Courier, monospace;\n`;\n\nconst Textbox = styled.input`\n  font-size: 22px;\n  padding: 2px;\n  width: 64px;\n  text-align: center;\n  margin-right: 8px;\n`;\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  return (\n    <div>\n      <Row>\n        <Button aria-label=\"Increment value\" onClick={() => dispatch(increment())}>\n          +\n        </Button>\n        <Value>{count}</Value>\n        <Button aria-label=\"Decrement value\" onClick={() => dispatch(decrement())}>\n          -\n        </Button>\n      </Row>\n      <Row>\n        <Textbox\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <Button onClick={() => dispatch(incrementByAmount(Number(incrementAmount) || 0))}>Add Amount</Button>\n        <AsyncButton onClick={() => dispatch(incrementAsync(Number(incrementAmount) || 0))}>Add Async</AsyncButton>\n      </Row>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}