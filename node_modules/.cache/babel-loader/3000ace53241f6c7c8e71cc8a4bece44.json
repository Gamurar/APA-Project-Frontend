{"ast":null,"code":"import axios from'axios';import authHeader from'./auth-header';var API_AUTH_URL='http://localhost:8000/v1/auth';var register=function register(_ref){var email=_ref.email,password=_ref.password;return axios.post(API_AUTH_URL+'/register',{email:email,password:password});};var login=function login(email,password){return axios.post(API_AUTH_URL+'/login',{email:email,password:password}).then(function(response){if(response.data.accessToken){localStorage.setItem('accessToken',response.data.accessToken);}return response.data;});};var me=function me(){return axios.get(API_AUTH_URL+'/me',{headers:authHeader()}).then(function(response){if(response.data){localStorage.setItem('user',JSON.stringify(response.data));}return response.data;});};var logout=function logout(){localStorage.removeItem('user');localStorage.removeItem('accessToken');};var _delete=function _delete(){return axios.delete(API_AUTH_URL+'/me',{headers:authHeader()});};var changePassword=function changePassword(newPassword){return axios.post(API_AUTH_URL+'/password',{password:newPassword},{headers:authHeader()});};var resetPassword=function resetPassword(data){return axios.post(API_AUTH_URL+'/password/reset',data);};var authService={register:register,login:login,me:me,logout:logout,delete:_delete,changePassword:changePassword,resetPassword:resetPassword};export default authService;","map":{"version":3,"sources":["/home/gamurar/mastertoken/frontend/src/services/auth.service.js"],"names":["axios","authHeader","API_AUTH_URL","register","email","password","post","login","then","response","data","accessToken","localStorage","setItem","me","get","headers","JSON","stringify","logout","removeItem","_delete","delete","changePassword","newPassword","resetPassword","authService"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CAEA,GAAMC,CAAAA,YAAY,CAAG,+BAArB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAfC,QAAe,MAAfA,QAAe,CACxC,MAAOL,CAAAA,KAAK,CAACM,IAAN,CAAWJ,YAAY,CAAG,WAA1B,CAAuC,CAC5CE,KAAK,CAALA,KAD4C,CAE5CC,QAAQ,CAARA,QAF4C,CAAvC,CAAP,CAID,CALD,CAOA,GAAME,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACH,KAAD,CAAQC,QAAR,CAAqB,CACjC,MAAOL,CAAAA,KAAK,CACTM,IADI,CACCJ,YAAY,CAAG,QADhB,CAC0B,CAC7BE,KAAK,CAALA,KAD6B,CAE7BC,QAAQ,CAARA,QAF6B,CAD1B,EAKJG,IALI,CAKC,SAACC,QAAD,CAAc,CAClB,GAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,CAA+B,CAC7BC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoCJ,QAAQ,CAACC,IAAT,CAAcC,WAAlD,EACD,CAED,MAAOF,CAAAA,QAAQ,CAACC,IAAhB,CACD,CAXI,CAAP,CAYD,CAbD,CAeA,GAAMI,CAAAA,EAAE,CAAG,QAALA,CAAAA,EAAK,EAAM,CACf,MAAOd,CAAAA,KAAK,CACTe,GADI,CACAb,YAAY,CAAG,KADf,CACsB,CACzBc,OAAO,CAAEf,UAAU,EADM,CADtB,EAIJO,IAJI,CAIC,SAACC,QAAD,CAAc,CAClB,GAAIA,QAAQ,CAACC,IAAb,CAAmB,CACjBE,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BI,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACC,IAAxB,CAA7B,EACD,CAED,MAAOD,CAAAA,QAAQ,CAACC,IAAhB,CACD,CAVI,CAAP,CAWD,CAZD,CAcA,GAAMS,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBP,YAAY,CAACQ,UAAb,CAAwB,MAAxB,EACAR,YAAY,CAACQ,UAAb,CAAwB,aAAxB,EACD,CAHD,CAKA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,MAAOrB,CAAAA,KAAK,CAACsB,MAAN,CAAapB,YAAY,CAAG,KAA5B,CAAmC,CACxCc,OAAO,CAAEf,UAAU,EADqB,CAAnC,CAAP,CAGD,CAJD,CAMA,GAAMsB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,WAAD,CAAiB,CACtC,MAAOxB,CAAAA,KAAK,CAACM,IAAN,CACLJ,YAAY,CAAG,WADV,CAEL,CAAEG,QAAQ,CAAEmB,WAAZ,CAFK,CAGL,CACER,OAAO,CAAEf,UAAU,EADrB,CAHK,CAAP,CAOD,CARD,CAUA,GAAMwB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACf,IAAD,CAAU,CAC9B,MAAOV,CAAAA,KAAK,CAACM,IAAN,CACHJ,YAAY,CAAG,iBADZ,CAEHQ,IAFG,CAAP,CAID,CALD,CAOA,GAAMgB,CAAAA,WAAW,CAAG,CAClBvB,QAAQ,CAARA,QADkB,CAElBI,KAAK,CAALA,KAFkB,CAGlBO,EAAE,CAAFA,EAHkB,CAIlBK,MAAM,CAANA,MAJkB,CAKlBG,MAAM,CAAED,OALU,CAMlBE,cAAc,CAAdA,cANkB,CAOlBE,aAAa,CAAbA,aAPkB,CAApB,CAUA,cAAeC,CAAAA,WAAf","sourcesContent":["import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_AUTH_URL = 'http://localhost:8000/v1/auth';\n\nconst register = ({ email, password }) => {\n  return axios.post(API_AUTH_URL + '/register', {\n    email,\n    password,\n  });\n};\n\nconst login = (email, password) => {\n  return axios\n    .post(API_AUTH_URL + '/login', {\n      email,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem('accessToken', response.data.accessToken);\n      }\n\n      return response.data;\n    });\n};\n\nconst me = () => {\n  return axios\n    .get(API_AUTH_URL + '/me', {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      if (response.data) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('accessToken');\n};\n\nconst _delete = () => {\n  return axios.delete(API_AUTH_URL + '/me', {\n    headers: authHeader(),\n  });\n};\n\nconst changePassword = (newPassword) => {\n  return axios.post(\n    API_AUTH_URL + '/password',\n    { password: newPassword },\n    {\n      headers: authHeader(),\n    },\n  );\n};\n\nconst resetPassword = (data) => {\n  return axios.post(\n      API_AUTH_URL + '/password/reset',\n      data,\n  );\n};\n\nconst authService = {\n  register,\n  login,\n  me,\n  logout,\n  delete: _delete,\n  changePassword,\n  resetPassword,\n};\n\nexport default authService;\n"]},"metadata":{},"sourceType":"module"}