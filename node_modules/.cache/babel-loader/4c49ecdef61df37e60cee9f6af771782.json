{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_AUTH_URL = 'http://localhost:8000/v1/auth';\n\nconst register = ({\n  email,\n  password\n}) => {\n  return axios.post(API_AUTH_URL + '/register', {\n    email,\n    password\n  });\n};\n\nconst login = (email, password) => {\n  return axios.post(API_AUTH_URL + '/login', {\n    email,\n    password\n  }).then(response => {\n    if (response.data.accessToken) {\n      localStorage.setItem('accessToken', response.data.accessToken);\n    }\n\n    return response.data;\n  });\n};\n\nconst me = () => {\n  return axios.get(API_AUTH_URL + '/me', {\n    headers: authHeader()\n  }).then(response => {\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n\n    return response.data;\n  });\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('accessToken');\n};\n\nconst _delete = () => {\n  return axios.delete(API_AUTH_URL + '/me', {\n    headers: authHeader()\n  });\n};\n\nconst changePassword = newPassword => {\n  return axios.post(API_AUTH_URL + '/password', {\n    password: newPassword\n  }, {\n    headers: authHeader()\n  });\n};\n\nconst resetPassword = data => {\n  return axios.post(API_AUTH_URL + '/password/reset', data);\n};\n\nconst authService = {\n  register,\n  login,\n  me,\n  logout,\n  delete: _delete,\n  changePassword,\n  resetPassword\n};\nexport default authService;","map":{"version":3,"sources":["/home/gamurar/mastertoken/react-boilerplate/src/services/auth.service.js"],"names":["axios","authHeader","API_AUTH_URL","register","email","password","post","login","then","response","data","accessToken","localStorage","setItem","me","get","headers","JSON","stringify","logout","removeItem","_delete","delete","changePassword","newPassword","resetPassword","authService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,YAAY,GAAG,+BAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AACxC,SAAOL,KAAK,CAACM,IAAN,CAAWJ,YAAY,GAAG,WAA1B,EAAuC;AAC5CE,IAAAA,KAD4C;AAE5CC,IAAAA;AAF4C,GAAvC,CAAP;AAID,CALD;;AAOA,MAAME,KAAK,GAAG,CAACH,KAAD,EAAQC,QAAR,KAAqB;AACjC,SAAOL,KAAK,CACTM,IADI,CACCJ,YAAY,GAAG,QADhB,EAC0B;AAC7BE,IAAAA,KAD6B;AAE7BC,IAAAA;AAF6B,GAD1B,EAKJG,IALI,CAKEC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC7BC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCJ,QAAQ,CAACC,IAAT,CAAcC,WAAlD;AACD;;AAED,WAAOF,QAAQ,CAACC,IAAhB;AACD,GAXI,CAAP;AAYD,CAbD;;AAeA,MAAMI,EAAE,GAAG,MAAM;AACf,SAAOd,KAAK,CACTe,GADI,CACAb,YAAY,GAAG,KADf,EACsB;AACzBc,IAAAA,OAAO,EAAEf,UAAU;AADM,GADtB,EAIJO,IAJI,CAIEC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjBE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BI,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACC,IAAxB,CAA7B;AACD;;AAED,WAAOD,QAAQ,CAACC,IAAhB;AACD,GAVI,CAAP;AAWD,CAZD;;AAcA,MAAMS,MAAM,GAAG,MAAM;AACnBP,EAAAA,YAAY,CAACQ,UAAb,CAAwB,MAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,aAAxB;AACD,CAHD;;AAKA,MAAMC,OAAO,GAAG,MAAM;AACpB,SAAOrB,KAAK,CAACsB,MAAN,CAAapB,YAAY,GAAG,KAA5B,EAAmC;AACxCc,IAAAA,OAAO,EAAEf,UAAU;AADqB,GAAnC,CAAP;AAGD,CAJD;;AAMA,MAAMsB,cAAc,GAAIC,WAAD,IAAiB;AACtC,SAAOxB,KAAK,CAACM,IAAN,CACLJ,YAAY,GAAG,WADV,EAEL;AAAEG,IAAAA,QAAQ,EAAEmB;AAAZ,GAFK,EAGL;AACER,IAAAA,OAAO,EAAEf,UAAU;AADrB,GAHK,CAAP;AAOD,CARD;;AAUA,MAAMwB,aAAa,GAAIf,IAAD,IAAU;AAC9B,SAAOV,KAAK,CAACM,IAAN,CACHJ,YAAY,GAAG,iBADZ,EAEHQ,IAFG,CAAP;AAID,CALD;;AAOA,MAAMgB,WAAW,GAAG;AAClBvB,EAAAA,QADkB;AAElBI,EAAAA,KAFkB;AAGlBO,EAAAA,EAHkB;AAIlBK,EAAAA,MAJkB;AAKlBG,EAAAA,MAAM,EAAED,OALU;AAMlBE,EAAAA,cANkB;AAOlBE,EAAAA;AAPkB,CAApB;AAUA,eAAeC,WAAf","sourcesContent":["import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_AUTH_URL = 'http://localhost:8000/v1/auth';\n\nconst register = ({ email, password }) => {\n  return axios.post(API_AUTH_URL + '/register', {\n    email,\n    password,\n  });\n};\n\nconst login = (email, password) => {\n  return axios\n    .post(API_AUTH_URL + '/login', {\n      email,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem('accessToken', response.data.accessToken);\n      }\n\n      return response.data;\n    });\n};\n\nconst me = () => {\n  return axios\n    .get(API_AUTH_URL + '/me', {\n      headers: authHeader(),\n    })\n    .then((response) => {\n      if (response.data) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('accessToken');\n};\n\nconst _delete = () => {\n  return axios.delete(API_AUTH_URL + '/me', {\n    headers: authHeader(),\n  });\n};\n\nconst changePassword = (newPassword) => {\n  return axios.post(\n    API_AUTH_URL + '/password',\n    { password: newPassword },\n    {\n      headers: authHeader(),\n    },\n  );\n};\n\nconst resetPassword = (data) => {\n  return axios.post(\n      API_AUTH_URL + '/password/reset',\n      data,\n  );\n};\n\nconst authService = {\n  register,\n  login,\n  me,\n  logout,\n  delete: _delete,\n  changePassword,\n  resetPassword,\n};\n\nexport default authService;\n"]},"metadata":{},"sourceType":"module"}