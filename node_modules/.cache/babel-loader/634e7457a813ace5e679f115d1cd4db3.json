{"ast":null,"code":"var _jsxFileName = \"/home/gamurar/mastertoken/frontend/src/theme/index.tsx\";\nimport React from 'react';\nimport styled, { createGlobalStyle, css } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 720,\n  upToMedium: 960,\n  upToLarge: 1280\n};\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n  ;\n\n  accumulator[size] = (a, b, c) => css`\n      @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n        ${css(a, b, c)}\n      }\n    `;\n\n  return accumulator;\n}, {});\nconst white = '#FFFFFF';\nconst black = '#000000';\nexport function colors() {\n  return {\n    // base\n    white,\n    black,\n    // text\n    text1: '#292F30',\n    //primary colors\n    primary1: darkMode ? '#2172E5' : '#ff007a',\n    primary2: darkMode ? '#3680E7' : '#FF8CC3',\n    primary3: darkMode ? '#4D8FEA' : '#FF99C9',\n    primary4: darkMode ? '#376bad70' : '#F6DDE8',\n    primary5: darkMode ? '#153d6f70' : '#FDEAF1',\n    // color text\n    primaryText1: darkMode ? '#6da8ff' : '#ff007a',\n    // secondary colors\n    secondary1: darkMode ? '#2172E5' : '#ff007a',\n    secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n    secondary3: darkMode ? '#17000b26' : '#FDEAF1',\n    // other\n    red1: '#FD4040',\n    red2: '#F82D3A',\n    red3: '#D60000',\n    green1: '#9DF9B1',\n    yellow1: '#e3a507',\n    yellow2: '#ff8f00',\n    yellow3: '#F3B71E',\n    blue1: '#2172E5',\n    blue2: '#5199FF',\n    error: '#ED0376',\n    success: '#27AE60',\n    warning: '#ff8f00',\n    popUpInputBorder: darkMode ? '#7A02E0' : '#7A02E0' // dont wanna forget these blue yet\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\n\n  };\n}\nexport function theme() {\n  return { ...colors(),\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24\n    },\n    //shadows\n    shadow1: '#2F80ED',\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `\n  };\n}\nconst TextWrapper = styled.span`\n  color: ${({\n  color,\n  theme\n}) => theme[color]};\n  font-size: ${({\n  fontSize\n}) => fontSize && `${fontSize}px`};\n  font-weight: ${({\n  fontWeight\n}) => fontWeight && `${fontWeight}`};\n  lineHeight: ${({\n  lineHeight\n}) => lineHeight && `${lineHeight}`};\n`;\n_c = TextWrapper;\nexport const TYPE = {\n  title1(props) {\n    return /*#__PURE__*/_jsxDEV(TextWrapper, {\n      fontWeight: 700,\n      fontSize: 18,\n      lineHeight: '21px',\n      color: 'text1',\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  }\n\n};\nexport const ThemedGlobalStyle = createGlobalStyle`\nhtml {\n  color: ${({\n  theme\n}) => theme.text1};\n  background-color: ${({\n  theme\n}) => theme.bg0} !important;\n}\n\na {\n color: ${({\n  theme\n}) => theme.blue1}; \n}\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextWrapper\");","map":{"version":3,"sources":["/home/gamurar/mastertoken/frontend/src/theme/index.tsx"],"names":["React","styled","createGlobalStyle","css","MEDIA_WIDTHS","upToExtraSmall","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","Object","keys","reduce","accumulator","size","a","b","c","white","black","colors","text1","primary1","darkMode","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","red1","red2","red3","green1","yellow1","yellow2","yellow3","blue1","blue2","error","success","warning","popUpInputBorder","theme","grids","sm","md","lg","shadow1","mediaWidth","flexColumnNoWrap","flexRowNoWrap","TextWrapper","span","color","fontSize","fontWeight","lineHeight","TYPE","title1","props","ThemedGlobalStyle","bg0"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport styled, {\n  createGlobalStyle,\n  css,\n  DefaultTheme,\n} from 'styled-components'\nimport { Colors } from './styled'\n\nexport const MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 720,\n  upToMedium: 960,\n  upToLarge: 1280,\n}\n\nconst mediaWidthTemplates: { [width in keyof typeof MEDIA_WIDTHS]: typeof css } = Object.keys(MEDIA_WIDTHS).reduce(\n  (accumulator, size) => {\n    ;(accumulator as any)[size] = (a: any, b: any, c: any) => css`\n      @media (max-width: ${(MEDIA_WIDTHS as any)[size]}px) {\n        ${css(a, b, c)}\n      }\n    `\n    return accumulator\n  },\n  {}\n) as any\n\nconst white = '#FFFFFF'\nconst black = '#000000'\n\nexport function colors(): Colors {\n  return {\n    // base\n    white,\n    black,\n\n    // text\n    text1: '#292F30',\n\n    //primary colors\n    primary1: darkMode ? '#2172E5' : '#ff007a',\n    primary2: darkMode ? '#3680E7' : '#FF8CC3',\n    primary3: darkMode ? '#4D8FEA' : '#FF99C9',\n    primary4: darkMode ? '#376bad70' : '#F6DDE8',\n    primary5: darkMode ? '#153d6f70' : '#FDEAF1',\n\n    // color text\n    primaryText1: darkMode ? '#6da8ff' : '#ff007a',\n\n    // secondary colors\n    secondary1: darkMode ? '#2172E5' : '#ff007a',\n    secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n    secondary3: darkMode ? '#17000b26' : '#FDEAF1',\n\n    // other\n    red1: '#FD4040',\n    red2: '#F82D3A',\n    red3: '#D60000',\n    green1: '#9DF9B1',\n    yellow1: '#e3a507',\n    yellow2: '#ff8f00',\n    yellow3: '#F3B71E',\n    blue1: '#2172E5',\n    blue2: '#5199FF',\n\n    error: '#ED0376',\n    success: '#27AE60',\n    warning: '#ff8f00',\n    popUpInputBorder: darkMode ? '#7A02E0' : '#7A02E0',\n\n    // dont wanna forget these blue yet\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\n  }\n}\n\nexport function theme(): DefaultTheme {\n  return {\n    ...colors(),\n\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24,\n    },\n\n    //shadows\n    shadow1:  '#2F80ED',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `,\n  }\n}\n\nconst TextWrapper = styled.span<{ color: keyof Colors; fontWeight: number; fontSize: number; lineHeight: string }>`\n  color: ${({ color, theme }) => (theme as any)[color]};\n  font-size: ${({fontSize}) => fontSize && `${fontSize}px`};\n  font-weight: ${({fontWeight}) => fontWeight && `${fontWeight}`};\n  lineHeight: ${({lineHeight}) => lineHeight && `${lineHeight}`};\n`\n\nexport const TYPE = {\n  title1(props: any) {\n    return <TextWrapper fontWeight={700} fontSize={18} lineHeight={'21px'} color={'text1'} {...props} />\n  },\n}\n\nexport const ThemedGlobalStyle = createGlobalStyle`\nhtml {\n  color: ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.bg0} !important;\n}\n\na {\n color: ${({ theme }) => theme.blue1}; \n}\n`\n"]},"metadata":{},"sourceType":"module"}