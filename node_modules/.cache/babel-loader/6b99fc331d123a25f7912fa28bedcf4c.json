{"ast":null,"code":"var _jsxFileName = \"/home/gamurar/mastertoken/frontend/src/components/Controllers/ChangePassword/ChangePassword.tsx\",\n    _s = $RefreshSig$();\n\nimport './ChangePassword.css';\nimport React, { useState } from 'react';\nimport AuthService from '../../../services/auth.service';\nimport BaseButton from '../../Views/Button/Button';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schema = Yup.object().shape({\n  password: Yup.string().required('This field is required'),\n  passwordConfirmation: Yup.string().when('password', {\n    is: val => !!(val && val.length > 0),\n    then: Yup.string().oneOf([Yup.ref('password')], 'Both password need to be the same')\n  })\n});\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  margin-left: auto;\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n_c = Button;\n\nconst ChangePassword = props => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n\n  const handlePasswordChange = ({\n    passwordConfirmation\n  }) => {\n    setLoading(true);\n    AuthService.changePassword(passwordConfirmation).then(data => {\n      toast.success('Password was changes successfully!');\n    }).catch(error => {\n      toast.error(`Failed to change your password: ${error.message}`);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__title\",\n        children: \"Change your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        password: '',\n        passwordConfirmation: ''\n      },\n      validationSchema: Schema,\n      onSubmit: handlePasswordChange,\n      children: ({\n        isValid,\n        values,\n        errors,\n        handleSubmit,\n        handleChange,\n        handleBlur\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"login__form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"field__input\",\n              name: \"password\",\n              value: values.password,\n              placeholder: \"Password\",\n              onBlur: handleBlur,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field__error\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"field__input\",\n              name: \"passwordConfirmation\",\n              value: values.passwordConfirmation,\n              placeholder: \"Confirm password\",\n              onBlur: handleBlur,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field__error\",\n              children: errors.passwordConfirmation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__actions\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loading || !isValid,\n              type: \"submit\",\n              children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Change password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: 'bottom-right',\n      autoClose: 7000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangePassword, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n\n_c2 = ChangePassword;\nexport default ChangePassword;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ChangePassword\");","map":{"version":3,"sources":["/home/gamurar/mastertoken/frontend/src/components/Controllers/ChangePassword/ChangePassword.tsx"],"names":["React","useState","AuthService","BaseButton","styled","Formik","Yup","ToastContainer","toast","Schema","object","shape","password","string","required","passwordConfirmation","when","is","val","length","then","oneOf","ref","Button","ChangePassword","props","loading","setLoading","handlePasswordChange","changePassword","data","success","catch","error","message","finally","isValid","values","errors","handleSubmit","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import './ChangePassword.css';\nimport React, { useState } from 'react';\nimport AuthService from '../../../services/auth.service';\nimport BaseButton from '../../Views/Button/Button';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst Schema = Yup.object().shape({\n  password: Yup.string().required('This field is required'),\n  passwordConfirmation: Yup.string().when('password', {\n    is: (val: string) => (!!(val && val.length > 0)),\n    then: Yup.string().oneOf([Yup.ref('password')], 'Both password need to be the same'),\n  }),\n});\n\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  margin-left: auto;\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n\nconst ChangePassword = (props: any) => {\n  const [loading, setLoading] = useState(false);\n\n  const handlePasswordChange = ({ passwordConfirmation }: { passwordConfirmation: string }) => {\n    setLoading(true);\n\n    AuthService.changePassword(passwordConfirmation)\n      .then((data) => {\n        toast.success('Password was changes successfully!');\n      })\n      .catch((error) => {\n        toast.error(`Failed to change your password: ${error.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__header\">\n        <div className=\"header__title\">Change your password</div>\n      </div>\n      <Formik\n        initialValues={{\n          password: '',\n          passwordConfirmation: '',\n        }}\n        validationSchema={Schema}\n        onSubmit={handlePasswordChange}\n      >\n        {({ isValid, values, errors, handleSubmit, handleChange, handleBlur }) => {\n          return (\n            <form onSubmit={handleSubmit} className=\"login__form\">\n              <div className=\"form__field\">\n                <input\n                  type=\"password\"\n                  className=\"field__input\"\n                  name=\"password\"\n                  value={values.password}\n                  placeholder=\"Password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.password}</p>\n              </div>\n\n              <div className=\"form__field\">\n                <input\n                  type=\"password\"\n                  className=\"field__input\"\n                  name=\"passwordConfirmation\"\n                  value={values.passwordConfirmation}\n                  placeholder=\"Confirm password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.passwordConfirmation}</p>\n              </div>\n\n              <div className=\"form__actions\">\n                <Button disabled={loading || !isValid} type=\"submit\">\n                  {loading ? (\n                    <span className=\"spinner-border spinner-border-sm\">Loading...</span>\n                  ) : (\n                    <span>Change password</span>\n                  )}\n                </Button>\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n      <ToastContainer position={'bottom-right'} autoClose={7000} />\n    </div>\n  );\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}