{"ast":null,"code":"var _jsxFileName = \"/home/gamurar/mastertoken/frontend/src/components/Controllers/BuyCard/BuyInputs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TYPE } from 'theme';\nimport styled from 'styled-components';\nimport { ReactComponent as SwitchIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!assets/svg/switch.svg\";\nimport CurrencyInput from './CurrencyInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BuyInputs = ({\n  setError\n}) => {\n  _s();\n\n  const [sendTypedValue, setSendTypedValue] = useState('');\n  const [receiveTypedValue, setReceiveTypedValue] = useState('');\n\n  const onUserInput = event => {\n    var _event$target$value$m;\n\n    const cleanedValue = ((_event$target$value$m = event.target.value.match(/\\d{0,}\\.?\\d{0,4}/)) === null || _event$target$value$m === void 0 ? void 0 : _event$target$value$m[0]) || '';\n    setSendTypedValue(cleanedValue);\n    const fCleanedValue = parseFloat(cleanedValue ? cleanedValue : '0') * 0.4;\n    setReceiveTypedValue(fCleanedValue.toString());\n    console.log('cleanedValue: ', cleanedValue);\n\n    if (cleanedValue === '') {\n      setError(true);\n    } else {\n      setError(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(InputsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CurrencyInput, {\n      label: \"Send\",\n      showBalance: true,\n      onUserInput: onUserInput,\n      typedValue: sendTypedValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwitchIconWrapper, {\n      children: /*#__PURE__*/_jsxDEV(SwitchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrencyInput, {\n      label: \"Receive\",\n      disabled: true,\n      onUserInput: onUserInput,\n      typedValue: receiveTypedValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BuyInputs, \"lNTPmYZQahKj8j27FxgCdvoV8I4=\");\n\n_c = BuyInputs;\nconst InputsContainer = styled.div`\n  margin: 14px 0;\n`;\n_c2 = InputsContainer;\nconst AmountInputLabel = styled(TYPE.caption)`\n  padding-left: 8px;\n  padding-bottom: 4px;\n  display: block;\n`;\nconst AmountInput = styled.input`\n  height: 72px;\n  width: -webkit-fill-available;\n  border: 1px solid #e6e6e6;\n  box-sizing: border-box;\n  border-radius: 12px;\n  font-size: 22px;\n  line-height: 30px;\n  text-align: right;\n  font-weight: 800;\n  color: ${({\n  theme\n}) => theme.black};\n  padding: 16px;\n`;\nconst SwitchIconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 8px;\n  margin-bottom: -8px;\n`;\n_c3 = SwitchIconWrapper;\nexport default BuyInputs;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BuyInputs\");\n$RefreshReg$(_c2, \"InputsContainer\");\n$RefreshReg$(_c3, \"SwitchIconWrapper\");","map":{"version":3,"sources":["/home/gamurar/mastertoken/frontend/src/components/Controllers/BuyCard/BuyInputs.tsx"],"names":["React","useState","TYPE","styled","CurrencyInput","BuyInputs","setError","sendTypedValue","setSendTypedValue","receiveTypedValue","setReceiveTypedValue","onUserInput","event","cleanedValue","target","value","match","fCleanedValue","parseFloat","toString","console","log","InputsContainer","div","AmountInputLabel","caption","AmountInput","input","theme","black","SwitchIconWrapper"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,OAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAMA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAAA;;AACzC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,EAAD,CAA1D;;AAEA,QAAMU,WAAW,GAAIC,KAAD,IAAgB;AAAA;;AAClC,UAAMC,YAAY,GAAG,0BAAAD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,KAAnB,CAAyB,kBAAzB,iFAA+C,CAA/C,MAAqD,EAA1E;AACAR,IAAAA,iBAAiB,CAACK,YAAD,CAAjB;AACA,UAAMI,aAAa,GAAGC,UAAU,CAACL,YAAY,GAAGA,YAAH,GAAkB,GAA/B,CAAV,GAAgD,GAAtE;AACAH,IAAAA,oBAAoB,CAACO,aAAa,CAACE,QAAd,EAAD,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,YAA9B;;AACA,QAAIA,YAAY,KAAK,EAArB,EAAyB;AACvBP,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GAXD;;AAaA,sBACE,QAAC,eAAD;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC,MAArB;AAA4B,MAAA,WAAW,MAAvC;AAAwC,MAAA,WAAW,EAAEK,WAArD;AAAkE,MAAA,UAAU,EAAEJ;AAA9E;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD;AAAA,6BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC,SAArB;AAA+B,MAAA,QAAQ,MAAvC;AAAwC,MAAA,WAAW,EAAEI,WAArD;AAAkE,MAAA,UAAU,EAAEF;AAA9E;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA1BD;;GAAMJ,S;;KAAAA,S;AA4BN,MAAMiB,eAAe,GAAGnB,MAAM,CAACoB,GAAI;AACnC;AACA,CAFA;MAAMD,e;AAIN,MAAME,gBAAgB,GAAGrB,MAAM,CAACD,IAAI,CAACuB,OAAN,CAAe;AAC9C;AACA;AACA;AACA,CAJA;AAMA,MAAMC,WAAW,GAAGvB,MAAM,CAACwB,KAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAM;AACtC;AACA,CAZA;AAcA,MAAMC,iBAAiB,GAAG3B,MAAM,CAACoB,GAAI;AACrC;AACA;AACA;AACA;AACA,CALA;MAAMO,iB;AAON,eAAezB,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport { TYPE } from 'theme'\nimport styled from 'styled-components'\nimport { ReactComponent as SwitchIcon } from 'assets/svg/switch.svg'\nimport CurrencyInput from './CurrencyInput'\n\ninterface Props {\n  setError: (isError: boolean) => void\n}\n\nconst BuyInputs = ({ setError }: Props) => {\n  const [sendTypedValue, setSendTypedValue] = useState('')\n  const [receiveTypedValue, setReceiveTypedValue] = useState('')\n\n  const onUserInput = (event: any) => {\n    const cleanedValue = event.target.value.match(/\\d{0,}\\.?\\d{0,4}/)?.[0] || ''\n    setSendTypedValue(cleanedValue)\n    const fCleanedValue = parseFloat(cleanedValue ? cleanedValue : '0') * 0.4\n    setReceiveTypedValue(fCleanedValue.toString())\n    console.log('cleanedValue: ', cleanedValue)\n    if (cleanedValue === '') {\n      setError(true)\n    } else {\n      setError(false)\n    }\n  }\n\n  return (\n    <InputsContainer>\n      <CurrencyInput label=\"Send\" showBalance onUserInput={onUserInput} typedValue={sendTypedValue}/>\n      <SwitchIconWrapper>\n        <SwitchIcon />\n      </SwitchIconWrapper>\n      <CurrencyInput label=\"Receive\" disabled onUserInput={onUserInput} typedValue={receiveTypedValue}/>\n    </InputsContainer>\n  )\n}\n\nconst InputsContainer = styled.div`\n  margin: 14px 0;\n`\n\nconst AmountInputLabel = styled(TYPE.caption)`\n  padding-left: 8px;\n  padding-bottom: 4px;\n  display: block;\n`\n\nconst AmountInput = styled.input`\n  height: 72px;\n  width: -webkit-fill-available;\n  border: 1px solid #e6e6e6;\n  box-sizing: border-box;\n  border-radius: 12px;\n  font-size: 22px;\n  line-height: 30px;\n  text-align: right;\n  font-weight: 800;\n  color: ${({ theme }) => theme.black};\n  padding: 16px;\n`\n\nconst SwitchIconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 8px;\n  margin-bottom: -8px;\n`\n\nexport default BuyInputs\n"]},"metadata":{},"sourceType":"module"}