{"ast":null,"code":"import _slicedToArray from\"/home/gamurar/mastertoken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/gamurar/mastertoken/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import'./ForgotPassword.css';import React,{useState}from'react';import AuthService from'../../services/auth.service';import BaseButton from'../../components/Views/Button/Button';import styled from'styled-components';import{Formik}from'formik';import*as Yup from'yup';import{ToastContainer,toast}from'react-toastify';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Schema=Yup.object().shape({email:Yup.string().email().required('This field is required')});var Button=styled(BaseButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  margin-left: auto;\\n  &:hover,\\n  &:focus {\\n    border: 2px solid rgba(112, 76, 182, 0.4);\\n  }\\n\\n  &:active {\\n    background-color: rgba(112, 76, 182, 0.2);\\n  }\\n\"])));var ForgotPassword=function ForgotPassword(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var handlePasswordChange=function handlePasswordChange(_ref,formikApi){var email=_ref.email;setLoading(true);AuthService.resetPassword({email:email}).then(function(data){formikApi.resetForm({values:{email:''}});toast.success('We have send an email to your address. Please follow the instructions from that email');}).catch(function(error){var _error$response,_error$response$data;console.log({error:error});toast.error(\"Failed to send email: \".concat((error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||(error===null||error===void 0?void 0:error.message)));}).finally(function(){setLoading(false);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"forgot-password\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"forgot-password__header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header__title\",children:\"Forgot your password\"}),/*#__PURE__*/_jsx(Link,{to:\"/login\",className:\"header__link\",children:\"Log in\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"forgot-password__para\",children:\"Please provide your email and we will send you instructions for password reset.\"}),/*#__PURE__*/_jsx(Formik,{initialValues:{email:''},validationSchema:Schema,onSubmit:handlePasswordChange,children:function children(_ref2){var isValid=_ref2.isValid,values=_ref2.values,errors=_ref2.errors,handleSubmit=_ref2.handleSubmit,handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"forgot-password__form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form__field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"field__input\",name:\"email\",value:values.email,placeholder:\"Email\",onBlur:handleBlur,onChange:handleChange}),/*#__PURE__*/_jsx(\"p\",{className:\"field__error\",children:errors.email})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form__actions\",children:/*#__PURE__*/_jsx(Button,{disabled:loading||!isValid,type:\"submit\",children:loading?/*#__PURE__*/_jsx(\"span\",{className:\"spinner-border spinner-border-sm\",children:\"Loading...\"}):/*#__PURE__*/_jsx(\"span\",{children:\"Submit\"})})})]});}}),/*#__PURE__*/_jsx(ToastContainer,{position:'bottom-right',autoClose:7000})]});};export default ForgotPassword;","map":{"version":3,"sources":["/home/gamurar/mastertoken/frontend/src/pages/ForgotPassword/ForgotPassword.tsx"],"names":["React","useState","AuthService","BaseButton","styled","Formik","Yup","ToastContainer","toast","Link","Schema","object","shape","email","string","required","Button","ForgotPassword","props","loading","setLoading","handlePasswordChange","formikApi","resetPassword","then","data","resetForm","values","success","catch","error","console","log","response","message","finally","isValid","errors","handleSubmit","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import './ForgotPassword.css';\nimport React, { useState } from 'react';\nimport AuthService from '../../services/auth.service';\nimport BaseButton from '../../components/Views/Button/Button';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\n\nconst Schema = Yup.object().shape({\n  email: Yup.string().email().required('This field is required'),\n});\n\nconst Button = styled(BaseButton)`\n  font-size: 14px;\n  margin-left: auto;\n  &:hover,\n  &:focus {\n    border: 2px solid rgba(112, 76, 182, 0.4);\n  }\n\n  &:active {\n    background-color: rgba(112, 76, 182, 0.2);\n  }\n`;\n\nconst ForgotPassword = (props: any) => {\n  const [loading, setLoading] = useState(false);\n\n  const handlePasswordChange = ({ email }: { email: string }, formikApi: any) => {\n    setLoading(true);\n\n    AuthService.resetPassword({ email: email })\n      .then((data) => {\n        formikApi.resetForm({values: {email: ''}});\n        toast.success('We have send an email to your address. Please follow the instructions from that email');\n      })\n      .catch((error) => {\n        console.log({ error });\n        toast.error(`Failed to send email: ${error?.response?.data?.message || error?.message}`);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"forgot-password\">\n      <div className=\"forgot-password__header\">\n        <div className=\"header__title\">Forgot your password</div>\n        <Link to=\"/login\" className=\"header__link\">\n          Log in\n        </Link>\n      </div>\n      <p className=\"forgot-password__para\">\n        Please provide your email and we will send you instructions for password reset.\n      </p>\n      <Formik\n        initialValues={{\n          email: '',\n        }}\n        validationSchema={Schema}\n        onSubmit={handlePasswordChange}\n      >\n        {({ isValid, values, errors, handleSubmit, handleChange, handleBlur }) => {\n          return (\n            <form onSubmit={handleSubmit} className=\"forgot-password__form\">\n              <div className=\"form__field\">\n                <input\n                  type=\"text\"\n                  className=\"field__input\"\n                  name=\"email\"\n                  value={values.email}\n                  placeholder=\"Email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p className=\"field__error\">{errors.email}</p>\n              </div>\n\n              <div className=\"form__actions\">\n                <Button disabled={loading || !isValid} type=\"submit\">\n                  {loading ? <span className=\"spinner-border spinner-border-sm\">Loading...</span> : <span>Submit</span>}\n                </Button>\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n      <ToastContainer position={'bottom-right'} autoClose={7000} />\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}